"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[8194],{4137:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return N}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=m(a),k=i,N=p["".concat(s,".").concat(k)]||p[k]||d[k]||l;return a?n.createElement(N,r(r({ref:t},u),{},{components:a})):n.createElement(N,r({ref:t},u))}));function N(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},8713:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return N},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return p}});var n=a(7462),i=a(3366),l=(a(7294),a(4137)),r=["components"],o={title:"Errors"},s=void 0,m={unversionedId:"polkadot/errors",id:"polkadot/errors",title:"Errors",description:"This page lists the errors that can be encountered in the different modules.",source:"@site/docs/polkadot/errors.md",sourceDirName:"polkadot",slug:"/polkadot/errors",permalink:"/docs/polkadot/errors",draft:!1,editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/polkadot/errors.md",tags:[],version:"current",frontMatter:{title:"Errors"},sidebar:"reference",previous:{title:"Events",permalink:"/docs/polkadot/events"},next:{title:"Overview",permalink:"/docs/kusama"}},u={},p=[{value:"auctions",id:"auctions",level:2},{value:"AlreadyLeasedOut",id:"alreadyleasedout",level:3},{value:"AuctionEnded",id:"auctionended",level:3},{value:"AuctionInProgress",id:"auctioninprogress",level:3},{value:"LeasePeriodInPast",id:"leaseperiodinpast",level:3},{value:"NotAuction",id:"notauction",level:3},{value:"NotCurrentAuction",id:"notcurrentauction",level:3},{value:"ParaNotRegistered",id:"paranotregistered",level:3},{value:"babe",id:"babe",level:2},{value:"DuplicateOffenceReport",id:"duplicateoffencereport",level:3},{value:"InvalidConfiguration",id:"invalidconfiguration",level:3},{value:"InvalidEquivocationProof",id:"invalidequivocationproof",level:3},{value:"InvalidKeyOwnershipProof",id:"invalidkeyownershipproof",level:3},{value:"balances",id:"balances",level:2},{value:"DeadAccount",id:"deadaccount",level:3},{value:"ExistentialDeposit",id:"existentialdeposit",level:3},{value:"ExistingVestingSchedule",id:"existingvestingschedule",level:3},{value:"Expendability",id:"expendability",level:3},{value:"InsufficientBalance",id:"insufficientbalance",level:3},{value:"LiquidityRestrictions",id:"liquidityrestrictions",level:3},{value:"TooManyFreezes",id:"toomanyfreezes",level:3},{value:"TooManyHolds",id:"toomanyholds",level:3},{value:"TooManyReserves",id:"toomanyreserves",level:3},{value:"VestingBalance",id:"vestingbalance",level:3},{value:"bounties",id:"bounties",level:2},{value:"HasActiveChildBounty",id:"hasactivechildbounty",level:3},{value:"InsufficientProposersBalance",id:"insufficientproposersbalance",level:3},{value:"InvalidFee",id:"invalidfee",level:3},{value:"InvalidIndex",id:"invalidindex",level:3},{value:"InvalidValue",id:"invalidvalue",level:3},{value:"PendingPayout",id:"pendingpayout",level:3},{value:"Premature",id:"premature",level:3},{value:"ReasonTooBig",id:"reasontoobig",level:3},{value:"RequireCurator",id:"requirecurator",level:3},{value:"TooManyQueued",id:"toomanyqueued",level:3},{value:"UnexpectedStatus",id:"unexpectedstatus",level:3},{value:"childBounties",id:"childbounties",level:2},{value:"InsufficientBountyBalance",id:"insufficientbountybalance",level:3},{value:"ParentBountyNotActive",id:"parentbountynotactive",level:3},{value:"TooManyChildBounties",id:"toomanychildbounties",level:3},{value:"claims",id:"claims",level:2},{value:"InvalidEthereumSignature",id:"invalidethereumsignature",level:3},{value:"InvalidStatement",id:"invalidstatement",level:3},{value:"PotUnderflow",id:"potunderflow",level:3},{value:"SenderHasNoClaim",id:"senderhasnoclaim",level:3},{value:"SignerHasNoClaim",id:"signerhasnoclaim",level:3},{value:"VestedBalanceExists",id:"vestedbalanceexists",level:3},{value:"configuration",id:"configuration",level:2},{value:"InvalidNewValue",id:"invalidnewvalue",level:3},{value:"convictionVoting",id:"convictionvoting",level:2},{value:"AlreadyDelegating",id:"alreadydelegating",level:3},{value:"AlreadyVoting",id:"alreadyvoting",level:3},{value:"BadClass",id:"badclass",level:3},{value:"ClassNeeded",id:"classneeded",level:3},{value:"InsufficientFunds",id:"insufficientfunds",level:3},{value:"MaxVotesReached",id:"maxvotesreached",level:3},{value:"Nonsense",id:"nonsense",level:3},{value:"NoPermission",id:"nopermission",level:3},{value:"NoPermissionYet",id:"nopermissionyet",level:3},{value:"NotDelegating",id:"notdelegating",level:3},{value:"NotOngoing",id:"notongoing",level:3},{value:"NotVoter",id:"notvoter",level:3},{value:"council",id:"council",level:2},{value:"AlreadyInitialized",id:"alreadyinitialized",level:3},{value:"DuplicateProposal",id:"duplicateproposal",level:3},{value:"DuplicateVote",id:"duplicatevote",level:3},{value:"NotMember",id:"notmember",level:3},{value:"ProposalMissing",id:"proposalmissing",level:3},{value:"TooEarly",id:"tooearly",level:3},{value:"TooManyProposals",id:"toomanyproposals",level:3},{value:"WrongIndex",id:"wrongindex",level:3},{value:"WrongProposalLength",id:"wrongproposallength",level:3},{value:"WrongProposalWeight",id:"wrongproposalweight",level:3},{value:"crowdloan",id:"crowdloan",level:2},{value:"AlreadyInNewRaise",id:"alreadyinnewraise",level:3},{value:"BidOrLeaseActive",id:"bidorleaseactive",level:3},{value:"CannotEndInPast",id:"cannotendinpast",level:3},{value:"CapExceeded",id:"capexceeded",level:3},{value:"ContributionPeriodOver",id:"contributionperiodover",level:3},{value:"ContributionTooSmall",id:"contributiontoosmall",level:3},{value:"EndTooFarInFuture",id:"endtoofarinfuture",level:3},{value:"FirstPeriodInPast",id:"firstperiodinpast",level:3},{value:"FirstPeriodTooFarInFuture",id:"firstperiodtoofarinfuture",level:3},{value:"FundNotEnded",id:"fundnotended",level:3},{value:"InvalidOrigin",id:"invalidorigin",level:3},{value:"InvalidParaId",id:"invalidparaid",level:3},{value:"InvalidSignature",id:"invalidsignature",level:3},{value:"LastPeriodBeforeFirstPeriod",id:"lastperiodbeforefirstperiod",level:3},{value:"LastPeriodTooFarInFuture",id:"lastperiodtoofarinfuture",level:3},{value:"LeaseActive",id:"leaseactive",level:3},{value:"MemoTooLarge",id:"memotoolarge",level:3},{value:"NoContributions",id:"nocontributions",level:3},{value:"NoLeasePeriod",id:"noleaseperiod",level:3},{value:"NotParachain",id:"notparachain",level:3},{value:"NotReadyToDissolve",id:"notreadytodissolve",level:3},{value:"Overflow",id:"overflow",level:3},{value:"VrfDelayInProgress",id:"vrfdelayinprogress",level:3},{value:"democracy",id:"democracy",level:2},{value:"AlreadyCanceled",id:"alreadycanceled",level:3},{value:"AlreadyDelegating",id:"alreadydelegating-1",level:3},{value:"AlreadyVetoed",id:"alreadyvetoed",level:3},{value:"DuplicateProposal",id:"duplicateproposal-1",level:3},{value:"InstantNotAllowed",id:"instantnotallowed",level:3},{value:"InsufficientFunds",id:"insufficientfunds-1",level:3},{value:"InvalidHash",id:"invalidhash",level:3},{value:"MaxVotesReached",id:"maxvotesreached-1",level:3},{value:"NoneWaiting",id:"nonewaiting",level:3},{value:"Nonsense",id:"nonsense-1",level:3},{value:"NoPermission",id:"nopermission-1",level:3},{value:"NoProposal",id:"noproposal",level:3},{value:"NotDelegating",id:"notdelegating-1",level:3},{value:"NotSimpleMajority",id:"notsimplemajority",level:3},{value:"NotVoter",id:"notvoter-1",level:3},{value:"PreimageNotExist",id:"preimagenotexist",level:3},{value:"ProposalBlacklisted",id:"proposalblacklisted",level:3},{value:"ProposalMissing",id:"proposalmissing-1",level:3},{value:"ReferendumInvalid",id:"referenduminvalid",level:3},{value:"TooMany",id:"toomany",level:3},{value:"ValueLow",id:"valuelow",level:3},{value:"VotesExist",id:"votesexist",level:3},{value:"VotingPeriodLow",id:"votingperiodlow",level:3},{value:"WrongUpperBound",id:"wrongupperbound",level:3},{value:"electionProviderMultiPhase",id:"electionprovidermultiphase",level:2},{value:"BoundNotMet",id:"boundnotmet",level:3},{value:"CallNotAllowed",id:"callnotallowed",level:3},{value:"FallbackFailed",id:"fallbackfailed",level:3},{value:"InvalidSubmissionIndex",id:"invalidsubmissionindex",level:3},{value:"MissingSnapshotMetadata",id:"missingsnapshotmetadata",level:3},{value:"OcwCallWrongEra",id:"ocwcallwrongera",level:3},{value:"PreDispatchEarlySubmission",id:"predispatchearlysubmission",level:3},{value:"PreDispatchWeakSubmission",id:"predispatchweaksubmission",level:3},{value:"PreDispatchWrongWinnerCount",id:"predispatchwrongwinnercount",level:3},{value:"SignedCannotPayDeposit",id:"signedcannotpaydeposit",level:3},{value:"SignedInvalidWitness",id:"signedinvalidwitness",level:3},{value:"SignedQueueFull",id:"signedqueuefull",level:3},{value:"SignedTooMuchWeight",id:"signedtoomuchweight",level:3},{value:"TooManyWinners",id:"toomanywinners",level:3},{value:"fastUnstake",id:"fastunstake",level:2},{value:"AlreadyHead",id:"alreadyhead",level:3},{value:"AlreadyQueued",id:"alreadyqueued",level:3},{value:"CallNotAllowed",id:"callnotallowed-1",level:3},{value:"NotController",id:"notcontroller",level:3},{value:"NotFullyBonded",id:"notfullybonded",level:3},{value:"NotQueued",id:"notqueued",level:3},{value:"grandpa",id:"grandpa",level:2},{value:"ChangePending",id:"changepending",level:3},{value:"DuplicateOffenceReport",id:"duplicateoffencereport-1",level:3},{value:"InvalidEquivocationProof",id:"invalidequivocationproof-1",level:3},{value:"InvalidKeyOwnershipProof",id:"invalidkeyownershipproof-1",level:3},{value:"PauseFailed",id:"pausefailed",level:3},{value:"ResumeFailed",id:"resumefailed",level:3},{value:"TooSoon",id:"toosoon",level:3},{value:"hrmp",id:"hrmp",level:2},{value:"AcceptHrmpChannelAlreadyConfirmed",id:"accepthrmpchannelalreadyconfirmed",level:3},{value:"AcceptHrmpChannelDoesntExist",id:"accepthrmpchanneldoesntexist",level:3},{value:"AcceptHrmpChannelLimitExceeded",id:"accepthrmpchannellimitexceeded",level:3},{value:"CancelHrmpOpenChannelUnauthorized",id:"cancelhrmpopenchannelunauthorized",level:3},{value:"CloseHrmpChannelAlreadyUnderway",id:"closehrmpchannelalreadyunderway",level:3},{value:"CloseHrmpChannelDoesntExist",id:"closehrmpchanneldoesntexist",level:3},{value:"CloseHrmpChannelUnauthorized",id:"closehrmpchannelunauthorized",level:3},{value:"OpenHrmpChannelAlreadyConfirmed",id:"openhrmpchannelalreadyconfirmed",level:3},{value:"OpenHrmpChannelAlreadyExists",id:"openhrmpchannelalreadyexists",level:3},{value:"OpenHrmpChannelAlreadyRequested",id:"openhrmpchannelalreadyrequested",level:3},{value:"OpenHrmpChannelCapacityExceedsLimit",id:"openhrmpchannelcapacityexceedslimit",level:3},{value:"OpenHrmpChannelDoesntExist",id:"openhrmpchanneldoesntexist",level:3},{value:"OpenHrmpChannelInvalidRecipient",id:"openhrmpchannelinvalidrecipient",level:3},{value:"OpenHrmpChannelLimitExceeded",id:"openhrmpchannellimitexceeded",level:3},{value:"OpenHrmpChannelMessageSizeExceedsLimit",id:"openhrmpchannelmessagesizeexceedslimit",level:3},{value:"OpenHrmpChannelToSelf",id:"openhrmpchanneltoself",level:3},{value:"OpenHrmpChannelZeroCapacity",id:"openhrmpchannelzerocapacity",level:3},{value:"OpenHrmpChannelZeroMessageSize",id:"openhrmpchannelzeromessagesize",level:3},{value:"WrongWitness",id:"wrongwitness",level:3},{value:"identity",id:"identity",level:2},{value:"AlreadyClaimed",id:"alreadyclaimed",level:3},{value:"EmptyIndex",id:"emptyindex",level:3},{value:"FeeChanged",id:"feechanged",level:3},{value:"InvalidIndex",id:"invalidindex-1",level:3},{value:"InvalidJudgement",id:"invalidjudgement",level:3},{value:"InvalidTarget",id:"invalidtarget",level:3},{value:"JudgementForDifferentIdentity",id:"judgementfordifferentidentity",level:3},{value:"JudgementGiven",id:"judgementgiven",level:3},{value:"JudgementPaymentFailed",id:"judgementpaymentfailed",level:3},{value:"NoIdentity",id:"noidentity",level:3},{value:"NotFound",id:"notfound",level:3},{value:"NotNamed",id:"notnamed",level:3},{value:"NotOwned",id:"notowned",level:3},{value:"NotSub",id:"notsub",level:3},{value:"StickyJudgement",id:"stickyjudgement",level:3},{value:"TooManyFields",id:"toomanyfields",level:3},{value:"TooManyRegistrars",id:"toomanyregistrars",level:3},{value:"TooManySubAccounts",id:"toomanysubaccounts",level:3},{value:"imOnline",id:"imonline",level:2},{value:"DuplicatedHeartbeat",id:"duplicatedheartbeat",level:3},{value:"InvalidKey",id:"invalidkey",level:3},{value:"indices",id:"indices",level:2},{value:"InUse",id:"inuse",level:3},{value:"NotAssigned",id:"notassigned",level:3},{value:"NotOwner",id:"notowner",level:3},{value:"NotTransfer",id:"nottransfer",level:3},{value:"Permanent",id:"permanent",level:3},{value:"multisig",id:"multisig",level:2},{value:"AlreadyApproved",id:"alreadyapproved",level:3},{value:"AlreadyStored",id:"alreadystored",level:3},{value:"MaxWeightTooLow",id:"maxweighttoolow",level:3},{value:"MinimumThreshold",id:"minimumthreshold",level:3},{value:"NoApprovalsNeeded",id:"noapprovalsneeded",level:3},{value:"NotFound",id:"notfound-1",level:3},{value:"NoTimepoint",id:"notimepoint",level:3},{value:"NotOwner",id:"notowner-1",level:3},{value:"SenderInSignatories",id:"senderinsignatories",level:3},{value:"SignatoriesOutOfOrder",id:"signatoriesoutoforder",level:3},{value:"TooFewSignatories",id:"toofewsignatories",level:3},{value:"TooManySignatories",id:"toomanysignatories",level:3},{value:"UnexpectedTimepoint",id:"unexpectedtimepoint",level:3},{value:"WrongTimepoint",id:"wrongtimepoint",level:3},{value:"nominationPools",id:"nominationpools",level:2},{value:"AccountBelongsToOtherPool",id:"accountbelongstootherpool",level:3},{value:"BondExtraRestricted",id:"bondextrarestricted",level:3},{value:"CanNotChangeState",id:"cannotchangestate",level:3},{value:"CannotWithdrawAny",id:"cannotwithdrawany",level:3},{value:"CommissionChangeRateNotAllowed",id:"commissionchangeratenotallowed",level:3},{value:"CommissionChangeThrottled",id:"commissionchangethrottled",level:3},{value:"CommissionExceedsMaximum",id:"commissionexceedsmaximum",level:3},{value:"Defensive",id:"defensive",level:3},{value:"DoesNotHavePermission",id:"doesnothavepermission",level:3},{value:"FullyUnbonding",id:"fullyunbonding",level:3},{value:"InvalidPoolId",id:"invalidpoolid",level:3},{value:"MaxCommissionRestricted",id:"maxcommissionrestricted",level:3},{value:"MaxPoolMembers",id:"maxpoolmembers",level:3},{value:"MaxPools",id:"maxpools",level:3},{value:"MaxUnbondingLimit",id:"maxunbondinglimit",level:3},{value:"MetadataExceedsMaxLen",id:"metadataexceedsmaxlen",level:3},{value:"MinimumBondNotMet",id:"minimumbondnotmet",level:3},{value:"NoCommissionCurrentSet",id:"nocommissioncurrentset",level:3},{value:"NoPendingCommission",id:"nopendingcommission",level:3},{value:"NotDestroying",id:"notdestroying",level:3},{value:"NotKickerOrDestroying",id:"notkickerordestroying",level:3},{value:"NotNominator",id:"notnominator",level:3},{value:"NotOpen",id:"notopen",level:3},{value:"OverflowRisk",id:"overflowrisk",level:3},{value:"PartialUnbondNotAllowedPermissionlessly",id:"partialunbondnotallowedpermissionlessly",level:3},{value:"PoolIdInUse",id:"poolidinuse",level:3},{value:"PoolMemberNotFound",id:"poolmembernotfound",level:3},{value:"PoolNotFound",id:"poolnotfound",level:3},{value:"RewardPoolNotFound",id:"rewardpoolnotfound",level:3},{value:"SubPoolsNotFound",id:"subpoolsnotfound",level:3},{value:"paraInclusion",id:"parainclusion",level:2},{value:"BitfieldAllZeros",id:"bitfieldallzeros",level:3},{value:"BitfieldDuplicateOrUnordered",id:"bitfieldduplicateorunordered",level:3},{value:"BitfieldReferencesFreedCore",id:"bitfieldreferencesfreedcore",level:3},{value:"CandidateNotInParentContext",id:"candidatenotinparentcontext",level:3},{value:"CandidateScheduledBeforeParaFree",id:"candidatescheduledbeforeparafree",level:3},{value:"HeadDataTooLarge",id:"headdatatoolarge",level:3},{value:"HrmpWatermarkMishandling",id:"hrmpwatermarkmishandling",level:3},{value:"IncorrectDownwardMessageHandling",id:"incorrectdownwardmessagehandling",level:3},{value:"InsufficientBacking",id:"insufficientbacking",level:3},{value:"InvalidBacking",id:"invalidbacking",level:3},{value:"InvalidBitfieldSignature",id:"invalidbitfieldsignature",level:3},{value:"InvalidGroupIndex",id:"invalidgroupindex",level:3},{value:"InvalidOutboundHrmp",id:"invalidoutboundhrmp",level:3},{value:"InvalidUpwardMessages",id:"invalidupwardmessages",level:3},{value:"InvalidValidationCodeHash",id:"invalidvalidationcodehash",level:3},{value:"NewCodeTooLarge",id:"newcodetoolarge",level:3},{value:"NotCollatorSigned",id:"notcollatorsigned",level:3},{value:"ParaHeadMismatch",id:"paraheadmismatch",level:3},{value:"PrematureCodeUpgrade",id:"prematurecodeupgrade",level:3},{value:"ScheduledOutOfOrder",id:"scheduledoutoforder",level:3},{value:"UnexpectedRelayParent",id:"unexpectedrelayparent",level:3},{value:"UnscheduledCandidate",id:"unscheduledcandidate",level:3},{value:"UnsortedOrDuplicateBackedCandidates",id:"unsortedorduplicatebackedcandidates",level:3},{value:"UnsortedOrDuplicateDisputeStatementSet",id:"unsortedorduplicatedisputestatementset",level:3},{value:"UnsortedOrDuplicateValidatorIndices",id:"unsortedorduplicatevalidatorindices",level:3},{value:"ValidationDataHashMismatch",id:"validationdatahashmismatch",level:3},{value:"ValidatorIndexOutOfBounds",id:"validatorindexoutofbounds",level:3},{value:"WrongBitfieldSize",id:"wrongbitfieldsize",level:3},{value:"WrongCollator",id:"wrongcollator",level:3},{value:"paraInherent",id:"parainherent",level:2},{value:"CandidateConcludedInvalid",id:"candidateconcludedinvalid",level:3},{value:"DisputeInvalid",id:"disputeinvalid",level:3},{value:"DisputeStatementsUnsortedOrDuplicates",id:"disputestatementsunsortedorduplicates",level:3},{value:"InherentOverweight",id:"inherentoverweight",level:3},{value:"InvalidParentHeader",id:"invalidparentheader",level:3},{value:"TooManyInclusionInherents",id:"toomanyinclusioninherents",level:3},{value:"paras",id:"paras",level:2},{value:"CannotDowngrade",id:"cannotdowngrade",level:3},{value:"CannotOffboard",id:"cannotoffboard",level:3},{value:"CannotOnboard",id:"cannotonboard",level:3},{value:"CannotUpgrade",id:"cannotupgrade",level:3},{value:"CannotUpgradeCode",id:"cannotupgradecode",level:3},{value:"NotRegistered",id:"notregistered",level:3},{value:"PvfCheckDoubleVote",id:"pvfcheckdoublevote",level:3},{value:"PvfCheckInvalidSignature",id:"pvfcheckinvalidsignature",level:3},{value:"PvfCheckStatementFuture",id:"pvfcheckstatementfuture",level:3},{value:"PvfCheckStatementStale",id:"pvfcheckstatementstale",level:3},{value:"PvfCheckSubjectInvalid",id:"pvfchecksubjectinvalid",level:3},{value:"PvfCheckValidatorIndexOutOfBounds",id:"pvfcheckvalidatorindexoutofbounds",level:3},{value:"parasDisputes",id:"parasdisputes",level:2},{value:"AncientDisputeStatement",id:"ancientdisputestatement",level:3},{value:"DuplicateDisputeStatementSets",id:"duplicatedisputestatementsets",level:3},{value:"DuplicateStatement",id:"duplicatestatement",level:3},{value:"InvalidSignature",id:"invalidsignature-1",level:3},{value:"MaliciousBacker",id:"maliciousbacker",level:3},{value:"MissingBackingVotes",id:"missingbackingvotes",level:3},{value:"SingleSidedDispute",id:"singlesideddispute",level:3},{value:"UnconfirmedDispute",id:"unconfirmeddispute",level:3},{value:"ValidatorIndexOutOfBounds",id:"validatorindexoutofbounds-1",level:3},{value:"parasSlashing",id:"parasslashing",level:2},{value:"DuplicateSlashingReport",id:"duplicateslashingreport",level:3},{value:"InvalidCandidateHash",id:"invalidcandidatehash",level:3},{value:"InvalidKeyOwnershipProof",id:"invalidkeyownershipproof-2",level:3},{value:"InvalidSessionIndex",id:"invalidsessionindex",level:3},{value:"InvalidValidatorIndex",id:"invalidvalidatorindex",level:3},{value:"ValidatorIndexIdMismatch",id:"validatorindexidmismatch",level:3},{value:"phragmenElection",id:"phragmenelection",level:2},{value:"DuplicatedCandidate",id:"duplicatedcandidate",level:3},{value:"InsufficientCandidateFunds",id:"insufficientcandidatefunds",level:3},{value:"InvalidRenouncing",id:"invalidrenouncing",level:3},{value:"InvalidReplacement",id:"invalidreplacement",level:3},{value:"InvalidVoteCount",id:"invalidvotecount",level:3},{value:"InvalidWitnessData",id:"invalidwitnessdata",level:3},{value:"LowBalance",id:"lowbalance",level:3},{value:"MaximumVotesExceeded",id:"maximumvotesexceeded",level:3},{value:"MemberSubmit",id:"membersubmit",level:3},{value:"MustBeVoter",id:"mustbevoter",level:3},{value:"NotMember",id:"notmember-1",level:3},{value:"NoVotes",id:"novotes",level:3},{value:"RunnerUpSubmit",id:"runnerupsubmit",level:3},{value:"TooManyCandidates",id:"toomanycandidates",level:3},{value:"TooManyVotes",id:"toomanyvotes",level:3},{value:"UnableToPayBond",id:"unabletopaybond",level:3},{value:"UnableToVote",id:"unabletovote",level:3},{value:"preimage",id:"preimage",level:2},{value:"AlreadyNoted",id:"alreadynoted",level:3},{value:"NotAuthorized",id:"notauthorized",level:3},{value:"NotNoted",id:"notnoted",level:3},{value:"NotRequested",id:"notrequested",level:3},{value:"Requested",id:"requested",level:3},{value:"TooBig",id:"toobig",level:3},{value:"proxy",id:"proxy",level:2},{value:"Duplicate",id:"duplicate",level:3},{value:"NoPermission",id:"nopermission-2",level:3},{value:"NoSelfProxy",id:"noselfproxy",level:3},{value:"NotFound",id:"notfound-2",level:3},{value:"NotProxy",id:"notproxy",level:3},{value:"TooMany",id:"toomany-1",level:3},{value:"Unannounced",id:"unannounced",level:3},{value:"Unproxyable",id:"unproxyable",level:3},{value:"referenda",id:"referenda",level:2},{value:"BadReferendum",id:"badreferendum",level:3},{value:"BadStatus",id:"badstatus",level:3},{value:"BadTrack",id:"badtrack",level:3},{value:"Full",id:"full",level:3},{value:"HasDeposit",id:"hasdeposit",level:3},{value:"NoDeposit",id:"nodeposit",level:3},{value:"NoPermission",id:"nopermission-3",level:3},{value:"NothingToDo",id:"nothingtodo",level:3},{value:"NotOngoing",id:"notongoing-1",level:3},{value:"NoTrack",id:"notrack",level:3},{value:"PreimageNotExist",id:"preimagenotexist-1",level:3},{value:"QueueEmpty",id:"queueempty",level:3},{value:"Unfinished",id:"unfinished",level:3},{value:"registrar",id:"registrar",level:2},{value:"AlreadyRegistered",id:"alreadyregistered",level:3},{value:"CannotDeregister",id:"cannotderegister",level:3},{value:"CannotDowngrade",id:"cannotdowngrade-1",level:3},{value:"CannotSwap",id:"cannotswap",level:3},{value:"CannotUpgrade",id:"cannotupgrade-1",level:3},{value:"CodeTooLarge",id:"codetoolarge",level:3},{value:"EmptyCode",id:"emptycode",level:3},{value:"HeadDataTooLarge",id:"headdatatoolarge-1",level:3},{value:"NotOwner",id:"notowner-2",level:3},{value:"NotParachain",id:"notparachain-1",level:3},{value:"NotParathread",id:"notparathread",level:3},{value:"NotRegistered",id:"notregistered-1",level:3},{value:"NotReserved",id:"notreserved",level:3},{value:"ParaLocked",id:"paralocked",level:3},{value:"scheduler",id:"scheduler",level:2},{value:"FailedToSchedule",id:"failedtoschedule",level:3},{value:"Named",id:"named",level:3},{value:"NotFound",id:"notfound-3",level:3},{value:"RescheduleNoChange",id:"reschedulenochange",level:3},{value:"TargetBlockNumberInPast",id:"targetblocknumberinpast",level:3},{value:"session",id:"session",level:2},{value:"DuplicatedKey",id:"duplicatedkey",level:3},{value:"InvalidProof",id:"invalidproof",level:3},{value:"NoAccount",id:"noaccount",level:3},{value:"NoAssociatedValidatorId",id:"noassociatedvalidatorid",level:3},{value:"NoKeys",id:"nokeys",level:3},{value:"slots",id:"slots",level:2},{value:"LeaseError",id:"leaseerror",level:3},{value:"ParaNotOnboarding",id:"paranotonboarding",level:3},{value:"staking",id:"staking",level:2},{value:"AlreadyBonded",id:"alreadybonded",level:3},{value:"AlreadyClaimed",id:"alreadyclaimed-1",level:3},{value:"AlreadyPaired",id:"alreadypaired",level:3},{value:"BadState",id:"badstate",level:3},{value:"BadTarget",id:"badtarget",level:3},{value:"BoundNotMet",id:"boundnotmet-1",level:3},{value:"CannotChillOther",id:"cannotchillother",level:3},{value:"CommissionTooLow",id:"commissiontoolow",level:3},{value:"DuplicateIndex",id:"duplicateindex",level:3},{value:"EmptyTargets",id:"emptytargets",level:3},{value:"FundedTarget",id:"fundedtarget",level:3},{value:"IncorrectHistoryDepth",id:"incorrecthistorydepth",level:3},{value:"IncorrectSlashingSpans",id:"incorrectslashingspans",level:3},{value:"InsufficientBond",id:"insufficientbond",level:3},{value:"InvalidEraToReward",id:"invalideratoreward",level:3},{value:"InvalidNumberOfNominations",id:"invalidnumberofnominations",level:3},{value:"InvalidSlashIndex",id:"invalidslashindex",level:3},{value:"NoMoreChunks",id:"nomorechunks",level:3},{value:"NotController",id:"notcontroller-1",level:3},{value:"NotSortedAndUnique",id:"notsortedandunique",level:3},{value:"NotStash",id:"notstash",level:3},{value:"NoUnlockChunk",id:"nounlockchunk",level:3},{value:"TooManyNominators",id:"toomanynominators",level:3},{value:"TooManyTargets",id:"toomanytargets",level:3},{value:"TooManyValidators",id:"toomanyvalidators",level:3},{value:"system",id:"system",level:2},{value:"CallFiltered",id:"callfiltered",level:3},{value:"FailedToExtractRuntimeVersion",id:"failedtoextractruntimeversion",level:3},{value:"InvalidSpecName",id:"invalidspecname",level:3},{value:"NonDefaultComposite",id:"nondefaultcomposite",level:3},{value:"NonZeroRefCount",id:"nonzerorefcount",level:3},{value:"SpecVersionNeedsToIncrease",id:"specversionneedstoincrease",level:3},{value:"technicalCommittee",id:"technicalcommittee",level:2},{value:"AlreadyInitialized",id:"alreadyinitialized-1",level:3},{value:"DuplicateProposal",id:"duplicateproposal-2",level:3},{value:"DuplicateVote",id:"duplicatevote-1",level:3},{value:"NotMember",id:"notmember-2",level:3},{value:"ProposalMissing",id:"proposalmissing-2",level:3},{value:"TooEarly",id:"tooearly-1",level:3},{value:"TooManyProposals",id:"toomanyproposals-1",level:3},{value:"WrongIndex",id:"wrongindex-1",level:3},{value:"WrongProposalLength",id:"wrongproposallength-1",level:3},{value:"WrongProposalWeight",id:"wrongproposalweight-1",level:3},{value:"technicalMembership",id:"technicalmembership",level:2},{value:"AlreadyMember",id:"alreadymember",level:3},{value:"NotMember",id:"notmember-3",level:3},{value:"TooManyMembers",id:"toomanymembers",level:3},{value:"tips",id:"tips",level:2},{value:"AlreadyKnown",id:"alreadyknown",level:3},{value:"NotFinder",id:"notfinder",level:3},{value:"Premature",id:"premature-1",level:3},{value:"ReasonTooBig",id:"reasontoobig-1",level:3},{value:"StillOpen",id:"stillopen",level:3},{value:"UnknownTip",id:"unknowntip",level:3},{value:"treasury",id:"treasury",level:2},{value:"InsufficientPermission",id:"insufficientpermission",level:3},{value:"InsufficientProposersBalance",id:"insufficientproposersbalance-1",level:3},{value:"InvalidIndex",id:"invalidindex-2",level:3},{value:"ProposalNotApproved",id:"proposalnotapproved",level:3},{value:"TooManyApprovals",id:"toomanyapprovals",level:3},{value:"ump",id:"ump",level:2},{value:"UnknownMessageIndex",id:"unknownmessageindex",level:3},{value:"WeightOverLimit",id:"weightoverlimit",level:3},{value:"utility",id:"utility",level:2},{value:"TooManyCalls",id:"toomanycalls",level:3},{value:"vesting",id:"vesting",level:2},{value:"AmountLow",id:"amountlow",level:3},{value:"AtMaxVestingSchedules",id:"atmaxvestingschedules",level:3},{value:"InvalidScheduleParams",id:"invalidscheduleparams",level:3},{value:"NotVesting",id:"notvesting",level:3},{value:"ScheduleIndexOutOfBounds",id:"scheduleindexoutofbounds",level:3},{value:"voterList",id:"voterlist",level:2},{value:"List",id:"list",level:3},{value:"whitelist",id:"whitelist",level:2},{value:"CallAlreadyWhitelisted",id:"callalreadywhitelisted",level:3},{value:"CallIsNotWhitelisted",id:"callisnotwhitelisted",level:3},{value:"InvalidCallWeightWitness",id:"invalidcallweightwitness",level:3},{value:"UnavailablePreImage",id:"unavailablepreimage",level:3},{value:"UndecodableCall",id:"undecodablecall",level:3},{value:"xcmPallet",id:"xcmpallet",level:2},{value:"AccountNotSovereign",id:"accountnotsovereign",level:3},{value:"AlreadySubscribed",id:"alreadysubscribed",level:3},{value:"BadLocation",id:"badlocation",level:3},{value:"BadVersion",id:"badversion",level:3},{value:"CannotReanchor",id:"cannotreanchor",level:3},{value:"DestinationNotInvertible",id:"destinationnotinvertible",level:3},{value:"Empty",id:"empty",level:3},{value:"FeesNotMet",id:"feesnotmet",level:3},{value:"Filtered",id:"filtered",level:3},{value:"InUse",id:"inuse-1",level:3},{value:"InvalidAsset",id:"invalidasset",level:3},{value:"InvalidOrigin",id:"invalidorigin-1",level:3},{value:"LockNotFound",id:"locknotfound",level:3},{value:"LowBalance",id:"lowbalance-1",level:3},{value:"NoSubscription",id:"nosubscription",level:3},{value:"SendFailure",id:"sendfailure",level:3},{value:"TooManyAssets",id:"toomanyassets",level:3},{value:"TooManyLocks",id:"toomanylocks",level:3},{value:"Unreachable",id:"unreachable",level:3},{value:"UnweighableMessage",id:"unweighablemessage",level:3}],d={toc:p},k="wrapper";function N(e){var t=e.components,a=(0,i.Z)(e,r);return(0,l.kt)(k,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This page lists the errors that can be encountered in the different modules. "),(0,l.kt)("p",null,"(NOTE: These were generated from a static/snapshot view of a recent default Polkadot runtime. Some items may not be available in older nodes, or in any customized implementations.)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#auctions"},"auctions")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#babe"},"babe")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#balances"},"balances")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#bounties"},"bounties")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#childbounties"},"childBounties")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#claims"},"claims")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#configuration"},"configuration")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#convictionvoting"},"convictionVoting")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#council"},"council")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#crowdloan"},"crowdloan")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#democracy"},"democracy")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#electionprovidermultiphase"},"electionProviderMultiPhase")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#fastunstake"},"fastUnstake")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#grandpa"},"grandpa")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#hrmp"},"hrmp")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#identity"},"identity")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#imonline"},"imOnline")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#indices"},"indices")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#multisig"},"multisig")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#nominationpools"},"nominationPools")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#parainclusion"},"paraInclusion")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#parainherent"},"paraInherent")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#paras"},"paras")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#parasdisputes"},"parasDisputes")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#parasslashing"},"parasSlashing")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#phragmenelection"},"phragmenElection")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#preimage"},"preimage")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#proxy"},"proxy")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#referenda"},"referenda")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#registrar"},"registrar")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#scheduler"},"scheduler")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#session"},"session")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#slots"},"slots")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#staking"},"staking")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#system"},"system")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#technicalcommittee"},"technicalCommittee")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#technicalmembership"},"technicalMembership")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#tips"},"tips")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#treasury"},"treasury")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#ump"},"ump")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#utility"},"utility")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#vesting"},"vesting")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#voterlist"},"voterList")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#whitelist"},"whitelist")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"#xcmpallet"},"xcmPallet"))))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"auctions"},"auctions"),(0,l.kt)("h3",{id:"alreadyleasedout"},"AlreadyLeasedOut"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.AlreadyLeasedOut.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The para is already leased out for part of this range. ")),(0,l.kt)("h3",{id:"auctionended"},"AuctionEnded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.AuctionEnded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Auction has already ended. ")),(0,l.kt)("h3",{id:"auctioninprogress"},"AuctionInProgress"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.AuctionInProgress.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    This auction is already in progress. ")),(0,l.kt)("h3",{id:"leaseperiodinpast"},"LeasePeriodInPast"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.LeasePeriodInPast.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The lease period is in the past. ")),(0,l.kt)("h3",{id:"notauction"},"NotAuction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.NotAuction.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not an auction. ")),(0,l.kt)("h3",{id:"notcurrentauction"},"NotCurrentAuction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.NotCurrentAuction.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not a current auction. ")),(0,l.kt)("h3",{id:"paranotregistered"},"ParaNotRegistered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.auctions.ParaNotRegistered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para is not registered ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"babe"},"babe"),(0,l.kt)("h3",{id:"duplicateoffencereport"},"DuplicateOffenceReport"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.babe.DuplicateOffenceReport.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A given equivocation report is valid but already previously reported. ")),(0,l.kt)("h3",{id:"invalidconfiguration"},"InvalidConfiguration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.babe.InvalidConfiguration.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Submitted configuration is invalid. ")),(0,l.kt)("h3",{id:"invalidequivocationproof"},"InvalidEquivocationProof"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.babe.InvalidEquivocationProof.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    An equivocation proof provided as part of an equivocation report is invalid. ")),(0,l.kt)("h3",{id:"invalidkeyownershipproof"},"InvalidKeyOwnershipProof"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.babe.InvalidKeyOwnershipProof.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A key ownership proof provided as part of an equivocation report is invalid. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"balances"},"balances"),(0,l.kt)("h3",{id:"deadaccount"},"DeadAccount"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.DeadAccount.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Beneficiary account must pre-exist. ")),(0,l.kt)("h3",{id:"existentialdeposit"},"ExistentialDeposit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.ExistentialDeposit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Value too low to create account due to existential deposit. ")),(0,l.kt)("h3",{id:"existingvestingschedule"},"ExistingVestingSchedule"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.ExistingVestingSchedule.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A vesting schedule already exists for this account. ")),(0,l.kt)("h3",{id:"expendability"},"Expendability"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.Expendability.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Transfer/payment would kill account. ")),(0,l.kt)("h3",{id:"insufficientbalance"},"InsufficientBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.InsufficientBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Balance too low to send value. ")),(0,l.kt)("h3",{id:"liquidityrestrictions"},"LiquidityRestrictions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.LiquidityRestrictions.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account liquidity restrictions prevent withdrawal. ")),(0,l.kt)("h3",{id:"toomanyfreezes"},"TooManyFreezes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.TooManyFreezes.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Number of freezes exceed ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxFreezes"),". ")),(0,l.kt)("h3",{id:"toomanyholds"},"TooManyHolds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.TooManyHolds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Number of holds exceed ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxHolds"),". ")),(0,l.kt)("h3",{id:"toomanyreserves"},"TooManyReserves"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.TooManyReserves.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Number of named reserves exceed ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxReserves"),". ")),(0,l.kt)("h3",{id:"vestingbalance"},"VestingBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.balances.VestingBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Vesting balance too high to send value. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"bounties"},"bounties"),(0,l.kt)("h3",{id:"hasactivechildbounty"},"HasActiveChildBounty"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.HasActiveChildBounty.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The bounty cannot be closed because it has active child bounties. ")),(0,l.kt)("h3",{id:"insufficientproposersbalance"},"InsufficientProposersBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.InsufficientProposersBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposer's balance is too low. ")),(0,l.kt)("h3",{id:"invalidfee"},"InvalidFee"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.InvalidFee.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid bounty fee. ")),(0,l.kt)("h3",{id:"invalidindex"},"InvalidIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.InvalidIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No proposal or bounty at that index. ")),(0,l.kt)("h3",{id:"invalidvalue"},"InvalidValue"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.InvalidValue.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid bounty value. ")),(0,l.kt)("h3",{id:"pendingpayout"},"PendingPayout"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.PendingPayout.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A bounty payout is pending.  To cancel the bounty, you must unassign and slash the curator. ")),(0,l.kt)("h3",{id:"premature"},"Premature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.Premature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The bounties cannot be claimed/closed because it's still in the countdown period. ")),(0,l.kt)("h3",{id:"reasontoobig"},"ReasonTooBig"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.ReasonTooBig.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The reason given is just too big. ")),(0,l.kt)("h3",{id:"requirecurator"},"RequireCurator"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.RequireCurator.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Require bounty curator. ")),(0,l.kt)("h3",{id:"toomanyqueued"},"TooManyQueued"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.TooManyQueued.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many approvals are already queued. ")),(0,l.kt)("h3",{id:"unexpectedstatus"},"UnexpectedStatus"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.bounties.UnexpectedStatus.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The bounty status is unexpected. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"childbounties"},"childBounties"),(0,l.kt)("h3",{id:"insufficientbountybalance"},"InsufficientBountyBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.childBounties.InsufficientBountyBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The bounty balance is not enough to add new child-bounty. ")),(0,l.kt)("h3",{id:"parentbountynotactive"},"ParentBountyNotActive"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.childBounties.ParentBountyNotActive.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The parent bounty is not in active state. ")),(0,l.kt)("h3",{id:"toomanychildbounties"},"TooManyChildBounties"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.childBounties.TooManyChildBounties.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Number of child bounties exceeds limit ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxActiveChildBountyCount"),". ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"claims"},"claims"),(0,l.kt)("h3",{id:"invalidethereumsignature"},"InvalidEthereumSignature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.claims.InvalidEthereumSignature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid Ethereum signature. ")),(0,l.kt)("h3",{id:"invalidstatement"},"InvalidStatement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.claims.InvalidStatement.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A needed statement was not included. ")),(0,l.kt)("h3",{id:"potunderflow"},"PotUnderflow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.claims.PotUnderflow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There's not enough in the pot to pay out some unvested amount. Generally implies a logic  error. ")),(0,l.kt)("h3",{id:"senderhasnoclaim"},"SenderHasNoClaim"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.claims.SenderHasNoClaim.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account ID sending transaction has no claim. ")),(0,l.kt)("h3",{id:"signerhasnoclaim"},"SignerHasNoClaim"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.claims.SignerHasNoClaim.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Ethereum address has no claim. ")),(0,l.kt)("h3",{id:"vestedbalanceexists"},"VestedBalanceExists"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.claims.VestedBalanceExists.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account already has a vested balance. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"configuration"},"configuration"),(0,l.kt)("h3",{id:"invalidnewvalue"},"InvalidNewValue"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.configuration.InvalidNewValue.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The new value for a configuration parameter is invalid. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"convictionvoting"},"convictionVoting"),(0,l.kt)("h3",{id:"alreadydelegating"},"AlreadyDelegating"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.AlreadyDelegating.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account is already delegating. ")),(0,l.kt)("h3",{id:"alreadyvoting"},"AlreadyVoting"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.AlreadyVoting.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account currently has votes attached to it and the operation cannot succeed until  these are removed, either through ",(0,l.kt)("inlineCode",{parentName:"li"},"unvote")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"reap_vote"),". ")),(0,l.kt)("h3",{id:"badclass"},"BadClass"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.BadClass.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The class ID supplied is invalid. ")),(0,l.kt)("h3",{id:"classneeded"},"ClassNeeded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.ClassNeeded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The class must be supplied since it is not easily determinable from the state. ")),(0,l.kt)("h3",{id:"insufficientfunds"},"InsufficientFunds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.InsufficientFunds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too high a balance was provided that the account cannot afford. ")),(0,l.kt)("h3",{id:"maxvotesreached"},"MaxVotesReached"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.MaxVotesReached.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Maximum number of votes reached. ")),(0,l.kt)("h3",{id:"nonsense"},"Nonsense"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.Nonsense.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Delegation to oneself makes no sense. ")),(0,l.kt)("h3",{id:"nopermission"},"NoPermission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.NoPermission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The actor has no permission to conduct the action. ")),(0,l.kt)("h3",{id:"nopermissionyet"},"NoPermissionYet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.NoPermissionYet.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The actor has no permission to conduct the action right now but will do in the future. ")),(0,l.kt)("h3",{id:"notdelegating"},"NotDelegating"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.NotDelegating.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account is not currently delegating. ")),(0,l.kt)("h3",{id:"notongoing"},"NotOngoing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.NotOngoing.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Poll is not ongoing. ")),(0,l.kt)("h3",{id:"notvoter"},"NotVoter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.convictionVoting.NotVoter.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given account did not vote on the poll. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"council"},"council"),(0,l.kt)("h3",{id:"alreadyinitialized"},"AlreadyInitialized"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.AlreadyInitialized.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Members are already initialized! ")),(0,l.kt)("h3",{id:"duplicateproposal"},"DuplicateProposal"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.DuplicateProposal.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicate proposals not allowed ")),(0,l.kt)("h3",{id:"duplicatevote"},"DuplicateVote"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.DuplicateVote.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicate vote ignored ")),(0,l.kt)("h3",{id:"notmember"},"NotMember"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.NotMember.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account is not a member ")),(0,l.kt)("h3",{id:"proposalmissing"},"ProposalMissing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.ProposalMissing.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposal must exist ")),(0,l.kt)("h3",{id:"tooearly"},"TooEarly"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.TooEarly.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The close call was made too early, before the end of the voting. ")),(0,l.kt)("h3",{id:"toomanyproposals"},"TooManyProposals"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.TooManyProposals.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There can only be a maximum of ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxProposals")," active proposals. ")),(0,l.kt)("h3",{id:"wrongindex"},"WrongIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.WrongIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Mismatched index ")),(0,l.kt)("h3",{id:"wrongproposallength"},"WrongProposalLength"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.WrongProposalLength.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given length bound for the proposal was too low. ")),(0,l.kt)("h3",{id:"wrongproposalweight"},"WrongProposalWeight"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.council.WrongProposalWeight.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given weight bound for the proposal was too low. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"crowdloan"},"crowdloan"),(0,l.kt)("h3",{id:"alreadyinnewraise"},"AlreadyInNewRaise"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.AlreadyInNewRaise.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The fund is already in ",(0,l.kt)("inlineCode",{parentName:"li"},"NewRaise")," ")),(0,l.kt)("h3",{id:"bidorleaseactive"},"BidOrLeaseActive"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.BidOrLeaseActive.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    This parachain's bid or lease is still active and withdraw cannot yet begin. ")),(0,l.kt)("h3",{id:"cannotendinpast"},"CannotEndInPast"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.CannotEndInPast.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The campaign ends before the current block number. The end must be in the future. ")),(0,l.kt)("h3",{id:"capexceeded"},"CapExceeded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.CapExceeded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Contributions exceed maximum amount. ")),(0,l.kt)("h3",{id:"contributionperiodover"},"ContributionPeriodOver"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.ContributionPeriodOver.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The contribution period has already ended. ")),(0,l.kt)("h3",{id:"contributiontoosmall"},"ContributionTooSmall"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.ContributionTooSmall.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The contribution was below the minimum, ",(0,l.kt)("inlineCode",{parentName:"li"},"MinContribution"),". ")),(0,l.kt)("h3",{id:"endtoofarinfuture"},"EndTooFarInFuture"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.EndTooFarInFuture.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The end date for this crowdloan is not sensible. ")),(0,l.kt)("h3",{id:"firstperiodinpast"},"FirstPeriodInPast"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.FirstPeriodInPast.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The current lease period is more than the first lease period. ")),(0,l.kt)("h3",{id:"firstperiodtoofarinfuture"},"FirstPeriodTooFarInFuture"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.FirstPeriodTooFarInFuture.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The first lease period needs to at least be less than 3 ",(0,l.kt)("inlineCode",{parentName:"li"},"max_value"),". ")),(0,l.kt)("h3",{id:"fundnotended"},"FundNotEnded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.FundNotEnded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The crowdloan has not yet ended. ")),(0,l.kt)("h3",{id:"invalidorigin"},"InvalidOrigin"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.InvalidOrigin.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The origin of this call is invalid. ")),(0,l.kt)("h3",{id:"invalidparaid"},"InvalidParaId"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.InvalidParaId.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid fund index. ")),(0,l.kt)("h3",{id:"invalidsignature"},"InvalidSignature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.InvalidSignature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid signature. ")),(0,l.kt)("h3",{id:"lastperiodbeforefirstperiod"},"LastPeriodBeforeFirstPeriod"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.LastPeriodBeforeFirstPeriod.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Last lease period must be greater than first lease period. ")),(0,l.kt)("h3",{id:"lastperiodtoofarinfuture"},"LastPeriodTooFarInFuture"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.LastPeriodTooFarInFuture.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The last lease period cannot be more than 3 periods after the first period. ")),(0,l.kt)("h3",{id:"leaseactive"},"LeaseActive"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.LeaseActive.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    This parachain lease is still active and retirement cannot yet begin. ")),(0,l.kt)("h3",{id:"memotoolarge"},"MemoTooLarge"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.MemoTooLarge.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided memo is too large. ")),(0,l.kt)("h3",{id:"nocontributions"},"NoContributions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.NoContributions.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are no contributions stored in this crowdloan. ")),(0,l.kt)("h3",{id:"noleaseperiod"},"NoLeasePeriod"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.NoLeasePeriod.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A lease period has not started yet, due to an offset in the starting block. ")),(0,l.kt)("h3",{id:"notparachain"},"NotParachain"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.NotParachain.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    This crowdloan does not correspond to a parachain. ")),(0,l.kt)("h3",{id:"notreadytodissolve"},"NotReadyToDissolve"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.NotReadyToDissolve.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The crowdloan is not ready to dissolve. Potentially still has a slot or in retirement period. ")),(0,l.kt)("h3",{id:"overflow"},"Overflow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.Overflow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There was an overflow. ")),(0,l.kt)("h3",{id:"vrfdelayinprogress"},"VrfDelayInProgress"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.crowdloan.VrfDelayInProgress.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No contributions allowed during the VRF delay ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"democracy"},"democracy"),(0,l.kt)("h3",{id:"alreadycanceled"},"AlreadyCanceled"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.AlreadyCanceled.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot cancel the same proposal twice ")),(0,l.kt)("h3",{id:"alreadydelegating-1"},"AlreadyDelegating"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.AlreadyDelegating.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account is already delegating. ")),(0,l.kt)("h3",{id:"alreadyvetoed"},"AlreadyVetoed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.AlreadyVetoed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Identity may not veto a proposal twice ")),(0,l.kt)("h3",{id:"duplicateproposal-1"},"DuplicateProposal"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.DuplicateProposal.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposal already made ")),(0,l.kt)("h3",{id:"instantnotallowed"},"InstantNotAllowed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.InstantNotAllowed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The instant referendum origin is currently disallowed. ")),(0,l.kt)("h3",{id:"insufficientfunds-1"},"InsufficientFunds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.InsufficientFunds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too high a balance was provided that the account cannot afford. ")),(0,l.kt)("h3",{id:"invalidhash"},"InvalidHash"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.InvalidHash.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid hash ")),(0,l.kt)("h3",{id:"maxvotesreached-1"},"MaxVotesReached"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.MaxVotesReached.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Maximum number of votes reached. ")),(0,l.kt)("h3",{id:"nonewaiting"},"NoneWaiting"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.NoneWaiting.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No proposals waiting ")),(0,l.kt)("h3",{id:"nonsense-1"},"Nonsense"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.Nonsense.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Delegation to oneself makes no sense. ")),(0,l.kt)("h3",{id:"nopermission-1"},"NoPermission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.NoPermission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The actor has no permission to conduct the action. ")),(0,l.kt)("h3",{id:"noproposal"},"NoProposal"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.NoProposal.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No external proposal ")),(0,l.kt)("h3",{id:"notdelegating-1"},"NotDelegating"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.NotDelegating.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account is not currently delegating. ")),(0,l.kt)("h3",{id:"notsimplemajority"},"NotSimpleMajority"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.NotSimpleMajority.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Next external proposal not simple majority ")),(0,l.kt)("h3",{id:"notvoter-1"},"NotVoter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.NotVoter.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given account did not vote on the referendum. ")),(0,l.kt)("h3",{id:"preimagenotexist"},"PreimageNotExist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.PreimageNotExist.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The preimage does not exist. ")),(0,l.kt)("h3",{id:"proposalblacklisted"},"ProposalBlacklisted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.ProposalBlacklisted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposal still blacklisted ")),(0,l.kt)("h3",{id:"proposalmissing-1"},"ProposalMissing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.ProposalMissing.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposal does not exist ")),(0,l.kt)("h3",{id:"referenduminvalid"},"ReferendumInvalid"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.ReferendumInvalid.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Vote given for invalid referendum ")),(0,l.kt)("h3",{id:"toomany"},"TooMany"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.TooMany.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Maximum number of items reached. ")),(0,l.kt)("h3",{id:"valuelow"},"ValueLow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.ValueLow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Value too low ")),(0,l.kt)("h3",{id:"votesexist"},"VotesExist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.VotesExist.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account currently has votes attached to it and the operation cannot succeed until  these are removed, either through ",(0,l.kt)("inlineCode",{parentName:"li"},"unvote")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"reap_vote"),". ")),(0,l.kt)("h3",{id:"votingperiodlow"},"VotingPeriodLow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.VotingPeriodLow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Voting period too low ")),(0,l.kt)("h3",{id:"wrongupperbound"},"WrongUpperBound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.democracy.WrongUpperBound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid upper bound. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"electionprovidermultiphase"},"electionProviderMultiPhase"),(0,l.kt)("h3",{id:"boundnotmet"},"BoundNotMet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.BoundNotMet.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Some bound not met ")),(0,l.kt)("h3",{id:"callnotallowed"},"CallNotAllowed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.CallNotAllowed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The call is not allowed at this point. ")),(0,l.kt)("h3",{id:"fallbackfailed"},"FallbackFailed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.FallbackFailed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The fallback failed ")),(0,l.kt)("h3",{id:"invalidsubmissionindex"},"InvalidSubmissionIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.InvalidSubmissionIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    ",(0,l.kt)("inlineCode",{parentName:"li"},"Self::insert_submission")," returned an invalid index. ")),(0,l.kt)("h3",{id:"missingsnapshotmetadata"},"MissingSnapshotMetadata"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.MissingSnapshotMetadata.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Snapshot metadata should exist but didn't. ")),(0,l.kt)("h3",{id:"ocwcallwrongera"},"OcwCallWrongEra"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.OcwCallWrongEra.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    OCW submitted solution for wrong round ")),(0,l.kt)("h3",{id:"predispatchearlysubmission"},"PreDispatchEarlySubmission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.PreDispatchEarlySubmission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Submission was too early. ")),(0,l.kt)("h3",{id:"predispatchweaksubmission"},"PreDispatchWeakSubmission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.PreDispatchWeakSubmission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Submission was too weak, score-wise. ")),(0,l.kt)("h3",{id:"predispatchwrongwinnercount"},"PreDispatchWrongWinnerCount"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.PreDispatchWrongWinnerCount.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Wrong number of winners presented. ")),(0,l.kt)("h3",{id:"signedcannotpaydeposit"},"SignedCannotPayDeposit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.SignedCannotPayDeposit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The origin failed to pay the deposit. ")),(0,l.kt)("h3",{id:"signedinvalidwitness"},"SignedInvalidWitness"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.SignedInvalidWitness.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Witness data to dispatchable is invalid. ")),(0,l.kt)("h3",{id:"signedqueuefull"},"SignedQueueFull"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.SignedQueueFull.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The queue was full, and the solution was not better than any of the existing ones. ")),(0,l.kt)("h3",{id:"signedtoomuchweight"},"SignedTooMuchWeight"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.SignedTooMuchWeight.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The signed submission consumes too much weight ")),(0,l.kt)("h3",{id:"toomanywinners"},"TooManyWinners"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.electionProviderMultiPhase.TooManyWinners.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Submitted solution has too many winners ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"fastunstake"},"fastUnstake"),(0,l.kt)("h3",{id:"alreadyhead"},"AlreadyHead"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.fastUnstake.AlreadyHead.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided un-staker is already in Head, and cannot deregister. ")),(0,l.kt)("h3",{id:"alreadyqueued"},"AlreadyQueued"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.fastUnstake.AlreadyQueued.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The bonded account has already been queued. ")),(0,l.kt)("h3",{id:"callnotallowed-1"},"CallNotAllowed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.fastUnstake.CallNotAllowed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The call is not allowed at this point because the pallet is not active. ")),(0,l.kt)("h3",{id:"notcontroller"},"NotController"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"api.errors.fastUnstake.NotController.is"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"summary"),":    The provided Controller account was not found. "),(0,l.kt)("p",{parentName:"li"}," This means that the given account is not bonded. "))),(0,l.kt)("h3",{id:"notfullybonded"},"NotFullyBonded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.fastUnstake.NotFullyBonded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The bonded account has active unlocking chunks. ")),(0,l.kt)("h3",{id:"notqueued"},"NotQueued"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.fastUnstake.NotQueued.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided un-staker is not in the ",(0,l.kt)("inlineCode",{parentName:"li"},"Queue"),". ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"grandpa"},"grandpa"),(0,l.kt)("h3",{id:"changepending"},"ChangePending"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.ChangePending.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Attempt to signal GRANDPA change with one already pending. ")),(0,l.kt)("h3",{id:"duplicateoffencereport-1"},"DuplicateOffenceReport"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.DuplicateOffenceReport.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A given equivocation report is valid but already previously reported. ")),(0,l.kt)("h3",{id:"invalidequivocationproof-1"},"InvalidEquivocationProof"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.InvalidEquivocationProof.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    An equivocation proof provided as part of an equivocation report is invalid. ")),(0,l.kt)("h3",{id:"invalidkeyownershipproof-1"},"InvalidKeyOwnershipProof"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.InvalidKeyOwnershipProof.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A key ownership proof provided as part of an equivocation report is invalid. ")),(0,l.kt)("h3",{id:"pausefailed"},"PauseFailed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.PauseFailed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Attempt to signal GRANDPA pause when the authority set isn't live  (either paused or already pending pause). ")),(0,l.kt)("h3",{id:"resumefailed"},"ResumeFailed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.ResumeFailed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Attempt to signal GRANDPA resume when the authority set isn't paused  (either live or already pending resume). ")),(0,l.kt)("h3",{id:"toosoon"},"TooSoon"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.grandpa.TooSoon.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot signal forced change so soon after last. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"hrmp"},"hrmp"),(0,l.kt)("h3",{id:"accepthrmpchannelalreadyconfirmed"},"AcceptHrmpChannelAlreadyConfirmed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.AcceptHrmpChannelAlreadyConfirmed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The channel is already confirmed. ")),(0,l.kt)("h3",{id:"accepthrmpchanneldoesntexist"},"AcceptHrmpChannelDoesntExist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.AcceptHrmpChannelDoesntExist.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The channel from the sender to the origin doesn't exist. ")),(0,l.kt)("h3",{id:"accepthrmpchannellimitexceeded"},"AcceptHrmpChannelLimitExceeded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.AcceptHrmpChannelLimitExceeded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The recipient already has the maximum number of allowed inbound channels. ")),(0,l.kt)("h3",{id:"cancelhrmpopenchannelunauthorized"},"CancelHrmpOpenChannelUnauthorized"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.CancelHrmpOpenChannelUnauthorized.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Canceling is requested by neither the sender nor recipient of the open channel request. ")),(0,l.kt)("h3",{id:"closehrmpchannelalreadyunderway"},"CloseHrmpChannelAlreadyUnderway"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.CloseHrmpChannelAlreadyUnderway.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The channel close request is already requested. ")),(0,l.kt)("h3",{id:"closehrmpchanneldoesntexist"},"CloseHrmpChannelDoesntExist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.CloseHrmpChannelDoesntExist.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The channel to be closed doesn't exist. ")),(0,l.kt)("h3",{id:"closehrmpchannelunauthorized"},"CloseHrmpChannelUnauthorized"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.CloseHrmpChannelUnauthorized.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The origin tries to close a channel where it is neither the sender nor the recipient. ")),(0,l.kt)("h3",{id:"openhrmpchannelalreadyconfirmed"},"OpenHrmpChannelAlreadyConfirmed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelAlreadyConfirmed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot cancel an HRMP open channel request because it is already confirmed. ")),(0,l.kt)("h3",{id:"openhrmpchannelalreadyexists"},"OpenHrmpChannelAlreadyExists"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelAlreadyExists.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The channel already exists ")),(0,l.kt)("h3",{id:"openhrmpchannelalreadyrequested"},"OpenHrmpChannelAlreadyRequested"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelAlreadyRequested.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There is already a request to open the same channel. ")),(0,l.kt)("h3",{id:"openhrmpchannelcapacityexceedslimit"},"OpenHrmpChannelCapacityExceedsLimit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelCapacityExceedsLimit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The requested capacity exceeds the global limit. ")),(0,l.kt)("h3",{id:"openhrmpchanneldoesntexist"},"OpenHrmpChannelDoesntExist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelDoesntExist.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The open request doesn't exist. ")),(0,l.kt)("h3",{id:"openhrmpchannelinvalidrecipient"},"OpenHrmpChannelInvalidRecipient"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelInvalidRecipient.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The recipient is not a valid para. ")),(0,l.kt)("h3",{id:"openhrmpchannellimitexceeded"},"OpenHrmpChannelLimitExceeded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelLimitExceeded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The sender already has the maximum number of allowed outbound channels. ")),(0,l.kt)("h3",{id:"openhrmpchannelmessagesizeexceedslimit"},"OpenHrmpChannelMessageSizeExceedsLimit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelMessageSizeExceedsLimit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The open request requested the message size that exceeds the global limit. ")),(0,l.kt)("h3",{id:"openhrmpchanneltoself"},"OpenHrmpChannelToSelf"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelToSelf.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The sender tried to open a channel to themselves. ")),(0,l.kt)("h3",{id:"openhrmpchannelzerocapacity"},"OpenHrmpChannelZeroCapacity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelZeroCapacity.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The requested capacity is zero. ")),(0,l.kt)("h3",{id:"openhrmpchannelzeromessagesize"},"OpenHrmpChannelZeroMessageSize"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.OpenHrmpChannelZeroMessageSize.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The requested maximum message size is 0. ")),(0,l.kt)("h3",{id:"wrongwitness"},"WrongWitness"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.hrmp.WrongWitness.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided witness data is wrong. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"identity"},"identity"),(0,l.kt)("h3",{id:"alreadyclaimed"},"AlreadyClaimed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.AlreadyClaimed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account ID is already named. ")),(0,l.kt)("h3",{id:"emptyindex"},"EmptyIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.EmptyIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Empty index. ")),(0,l.kt)("h3",{id:"feechanged"},"FeeChanged"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.FeeChanged.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Fee is changed. ")),(0,l.kt)("h3",{id:"invalidindex-1"},"InvalidIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.InvalidIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The index is invalid. ")),(0,l.kt)("h3",{id:"invalidjudgement"},"InvalidJudgement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.InvalidJudgement.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid judgement. ")),(0,l.kt)("h3",{id:"invalidtarget"},"InvalidTarget"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.InvalidTarget.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The target is invalid. ")),(0,l.kt)("h3",{id:"judgementfordifferentidentity"},"JudgementForDifferentIdentity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.JudgementForDifferentIdentity.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided judgement was for a different identity. ")),(0,l.kt)("h3",{id:"judgementgiven"},"JudgementGiven"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.JudgementGiven.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Judgement given. ")),(0,l.kt)("h3",{id:"judgementpaymentfailed"},"JudgementPaymentFailed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.JudgementPaymentFailed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Error that occurs when there is an issue paying for judgement. ")),(0,l.kt)("h3",{id:"noidentity"},"NoIdentity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.NoIdentity.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No identity found. ")),(0,l.kt)("h3",{id:"notfound"},"NotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.NotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account isn't found. ")),(0,l.kt)("h3",{id:"notnamed"},"NotNamed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.NotNamed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account isn't named. ")),(0,l.kt)("h3",{id:"notowned"},"NotOwned"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.NotOwned.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Sub-account isn't owned by sender. ")),(0,l.kt)("h3",{id:"notsub"},"NotSub"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.NotSub.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Sender is not a sub-account. ")),(0,l.kt)("h3",{id:"stickyjudgement"},"StickyJudgement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.StickyJudgement.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Sticky judgement. ")),(0,l.kt)("h3",{id:"toomanyfields"},"TooManyFields"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.TooManyFields.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many additional fields. ")),(0,l.kt)("h3",{id:"toomanyregistrars"},"TooManyRegistrars"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.TooManyRegistrars.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Maximum amount of registrars reached. Cannot add any more. ")),(0,l.kt)("h3",{id:"toomanysubaccounts"},"TooManySubAccounts"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.identity.TooManySubAccounts.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many subs-accounts. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"imonline"},"imOnline"),(0,l.kt)("h3",{id:"duplicatedheartbeat"},"DuplicatedHeartbeat"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.imOnline.DuplicatedHeartbeat.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicated heartbeat. ")),(0,l.kt)("h3",{id:"invalidkey"},"InvalidKey"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.imOnline.InvalidKey.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Non existent public key. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"indices"},"indices"),(0,l.kt)("h3",{id:"inuse"},"InUse"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.indices.InUse.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The index was not available. ")),(0,l.kt)("h3",{id:"notassigned"},"NotAssigned"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.indices.NotAssigned.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The index was not already assigned. ")),(0,l.kt)("h3",{id:"notowner"},"NotOwner"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.indices.NotOwner.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The index is assigned to another account. ")),(0,l.kt)("h3",{id:"nottransfer"},"NotTransfer"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.indices.NotTransfer.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The source and destination accounts are identical. ")),(0,l.kt)("h3",{id:"permanent"},"Permanent"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.indices.Permanent.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The index is permanent and may not be freed/changed. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"multisig"},"multisig"),(0,l.kt)("h3",{id:"alreadyapproved"},"AlreadyApproved"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.AlreadyApproved.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Call is already approved by this signatory. ")),(0,l.kt)("h3",{id:"alreadystored"},"AlreadyStored"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.AlreadyStored.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The data to be stored is already stored. ")),(0,l.kt)("h3",{id:"maxweighttoolow"},"MaxWeightTooLow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.MaxWeightTooLow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The maximum weight information provided was too low. ")),(0,l.kt)("h3",{id:"minimumthreshold"},"MinimumThreshold"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.MinimumThreshold.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Threshold must be 2 or greater. ")),(0,l.kt)("h3",{id:"noapprovalsneeded"},"NoApprovalsNeeded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.NoApprovalsNeeded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Call doesn't need any (more) approvals. ")),(0,l.kt)("h3",{id:"notfound-1"},"NotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.NotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Multisig operation not found when attempting to cancel. ")),(0,l.kt)("h3",{id:"notimepoint"},"NoTimepoint"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.NoTimepoint.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No timepoint was given, yet the multisig operation is already underway. ")),(0,l.kt)("h3",{id:"notowner-1"},"NotOwner"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.NotOwner.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Only the account that originally created the multisig is able to cancel it. ")),(0,l.kt)("h3",{id:"senderinsignatories"},"SenderInSignatories"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.SenderInSignatories.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The sender was contained in the other signatories; it shouldn't be. ")),(0,l.kt)("h3",{id:"signatoriesoutoforder"},"SignatoriesOutOfOrder"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.SignatoriesOutOfOrder.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The signatories were provided out of order; they should be ordered. ")),(0,l.kt)("h3",{id:"toofewsignatories"},"TooFewSignatories"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.TooFewSignatories.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are too few signatories in the list. ")),(0,l.kt)("h3",{id:"toomanysignatories"},"TooManySignatories"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.TooManySignatories.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are too many signatories in the list. ")),(0,l.kt)("h3",{id:"unexpectedtimepoint"},"UnexpectedTimepoint"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.UnexpectedTimepoint.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A timepoint was given, yet no multisig operation is underway. ")),(0,l.kt)("h3",{id:"wrongtimepoint"},"WrongTimepoint"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.multisig.WrongTimepoint.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A different timepoint was given to the multisig operation that is underway. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"nominationpools"},"nominationPools"),(0,l.kt)("h3",{id:"accountbelongstootherpool"},"AccountBelongsToOtherPool"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.AccountBelongsToOtherPool.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    An account is already delegating in another pool. An account may only belong to one  pool at a time. ")),(0,l.kt)("h3",{id:"bondextrarestricted"},"BondExtraRestricted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.BondExtraRestricted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Bonding extra is restricted to the exact pending reward amount. ")),(0,l.kt)("h3",{id:"cannotchangestate"},"CanNotChangeState"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.CanNotChangeState.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The pools state cannot be changed. ")),(0,l.kt)("h3",{id:"cannotwithdrawany"},"CannotWithdrawAny"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.CannotWithdrawAny.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    None of the funds can be withdrawn yet because the bonding duration has not passed. ")),(0,l.kt)("h3",{id:"commissionchangeratenotallowed"},"CommissionChangeRateNotAllowed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.CommissionChangeRateNotAllowed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The submitted changes to commission change rate are not allowed. ")),(0,l.kt)("h3",{id:"commissionchangethrottled"},"CommissionChangeThrottled"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.CommissionChangeThrottled.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not enough blocks have surpassed since the last commission update. ")),(0,l.kt)("h3",{id:"commissionexceedsmaximum"},"CommissionExceedsMaximum"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.CommissionExceedsMaximum.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The supplied commission exceeds the max allowed commission. ")),(0,l.kt)("h3",{id:"defensive"},"Defensive"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.Defensive.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Some error occurred that should never happen. This should be reported to the  maintainers. ")),(0,l.kt)("h3",{id:"doesnothavepermission"},"DoesNotHavePermission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.DoesNotHavePermission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The caller does not have adequate permissions. ")),(0,l.kt)("h3",{id:"fullyunbonding"},"FullyUnbonding"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.FullyUnbonding.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The member is fully unbonded (and thus cannot access the bonded and reward pool  anymore to, for example, collect rewards). ")),(0,l.kt)("h3",{id:"invalidpoolid"},"InvalidPoolId"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.InvalidPoolId.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Pool id provided is not correct/usable. ")),(0,l.kt)("h3",{id:"maxcommissionrestricted"},"MaxCommissionRestricted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.MaxCommissionRestricted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The pool's max commission cannot be set higher than the existing value. ")),(0,l.kt)("h3",{id:"maxpoolmembers"},"MaxPoolMembers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.MaxPoolMembers.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many members in the pool or system. ")),(0,l.kt)("h3",{id:"maxpools"},"MaxPools"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.MaxPools.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The system is maxed out on pools. ")),(0,l.kt)("h3",{id:"maxunbondinglimit"},"MaxUnbondingLimit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.MaxUnbondingLimit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The member cannot unbond further chunks due to reaching the limit. ")),(0,l.kt)("h3",{id:"metadataexceedsmaxlen"},"MetadataExceedsMaxLen"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.MetadataExceedsMaxLen.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Metadata exceeds ","[",(0,l.kt)("inlineCode",{parentName:"li"},"Config::MaxMetadataLen"),"]"," ")),(0,l.kt)("h3",{id:"minimumbondnotmet"},"MinimumBondNotMet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"api.errors.nominationPools.MinimumBondNotMet.is"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"summary"),":    The amount does not meet the minimum bond to either join or create a pool. "),(0,l.kt)("p",{parentName:"li"}," The depositor can never unbond to a value less than  ",(0,l.kt)("inlineCode",{parentName:"p"},"Pallet::depositor_min_bond"),". The caller does not have nominating  permissions for the pool. Members can never unbond to a value below ",(0,l.kt)("inlineCode",{parentName:"p"},"MinJoinBond"),". "))),(0,l.kt)("h3",{id:"nocommissioncurrentset"},"NoCommissionCurrentSet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.NoCommissionCurrentSet.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No commission current has been set. ")),(0,l.kt)("h3",{id:"nopendingcommission"},"NoPendingCommission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.NoPendingCommission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There is no pending commission to claim. ")),(0,l.kt)("h3",{id:"notdestroying"},"NotDestroying"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.NotDestroying.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A pool must be in ","[",(0,l.kt)("inlineCode",{parentName:"li"},"PoolState::Destroying"),"]"," in order for the depositor to unbond or for  other members to be permissionlessly unbonded. ")),(0,l.kt)("h3",{id:"notkickerordestroying"},"NotKickerOrDestroying"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.NotKickerOrDestroying.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Either a) the caller cannot make a valid kick or b) the pool is not destroying. ")),(0,l.kt)("h3",{id:"notnominator"},"NotNominator"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.NotNominator.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The caller does not have nominating permissions for the pool. ")),(0,l.kt)("h3",{id:"notopen"},"NotOpen"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.NotOpen.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The pool is not open to join ")),(0,l.kt)("h3",{id:"overflowrisk"},"OverflowRisk"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.OverflowRisk.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The transaction could not be executed due to overflow risk for the pool. ")),(0,l.kt)("h3",{id:"partialunbondnotallowedpermissionlessly"},"PartialUnbondNotAllowedPermissionlessly"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.PartialUnbondNotAllowedPermissionlessly.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Partial unbonding now allowed permissionlessly. ")),(0,l.kt)("h3",{id:"poolidinuse"},"PoolIdInUse"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.PoolIdInUse.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Pool id currently in use. ")),(0,l.kt)("h3",{id:"poolmembernotfound"},"PoolMemberNotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.PoolMemberNotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    An account is not a member. ")),(0,l.kt)("h3",{id:"poolnotfound"},"PoolNotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.PoolNotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A (bonded) pool id does not exist. ")),(0,l.kt)("h3",{id:"rewardpoolnotfound"},"RewardPoolNotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.RewardPoolNotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A reward pool does not exist. In all cases this is a system logic error. ")),(0,l.kt)("h3",{id:"subpoolsnotfound"},"SubPoolsNotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.nominationPools.SubPoolsNotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A sub pool does not exist. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"parainclusion"},"paraInclusion"),(0,l.kt)("h3",{id:"bitfieldallzeros"},"BitfieldAllZeros"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.BitfieldAllZeros.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Bitfield consists of zeros only. ")),(0,l.kt)("h3",{id:"bitfieldduplicateorunordered"},"BitfieldDuplicateOrUnordered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.BitfieldDuplicateOrUnordered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Multiple bitfields submitted by same validator or validators out of order by index. ")),(0,l.kt)("h3",{id:"bitfieldreferencesfreedcore"},"BitfieldReferencesFreedCore"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.BitfieldReferencesFreedCore.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A bitfield that references a freed core,  either intentionally or as part of a concluded  invalid dispute. ")),(0,l.kt)("h3",{id:"candidatenotinparentcontext"},"CandidateNotInParentContext"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.CandidateNotInParentContext.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Candidate not in parent context. ")),(0,l.kt)("h3",{id:"candidatescheduledbeforeparafree"},"CandidateScheduledBeforeParaFree"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.CandidateScheduledBeforeParaFree.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Candidate scheduled despite pending candidate already existing for the para. ")),(0,l.kt)("h3",{id:"headdatatoolarge"},"HeadDataTooLarge"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.HeadDataTooLarge.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Head data exceeds the configured maximum. ")),(0,l.kt)("h3",{id:"hrmpwatermarkmishandling"},"HrmpWatermarkMishandling"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.HrmpWatermarkMishandling.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The candidate didn't follow the rules of HRMP watermark advancement. ")),(0,l.kt)("h3",{id:"incorrectdownwardmessagehandling"},"IncorrectDownwardMessageHandling"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.IncorrectDownwardMessageHandling.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The downward message queue is not processed correctly. ")),(0,l.kt)("h3",{id:"insufficientbacking"},"InsufficientBacking"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InsufficientBacking.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Insufficient (non-majority) backing. ")),(0,l.kt)("h3",{id:"invalidbacking"},"InvalidBacking"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InvalidBacking.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid (bad signature, unknown validator, etc.) backing. ")),(0,l.kt)("h3",{id:"invalidbitfieldsignature"},"InvalidBitfieldSignature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InvalidBitfieldSignature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid signature ")),(0,l.kt)("h3",{id:"invalidgroupindex"},"InvalidGroupIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InvalidGroupIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid group index in core assignment. ")),(0,l.kt)("h3",{id:"invalidoutboundhrmp"},"InvalidOutboundHrmp"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InvalidOutboundHrmp.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The HRMP messages sent by the candidate is not valid. ")),(0,l.kt)("h3",{id:"invalidupwardmessages"},"InvalidUpwardMessages"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InvalidUpwardMessages.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    At least one upward message sent does not pass the acceptance criteria. ")),(0,l.kt)("h3",{id:"invalidvalidationcodehash"},"InvalidValidationCodeHash"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.InvalidValidationCodeHash.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The validation code hash of the candidate is not valid. ")),(0,l.kt)("h3",{id:"newcodetoolarge"},"NewCodeTooLarge"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.NewCodeTooLarge.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Output code is too large ")),(0,l.kt)("h3",{id:"notcollatorsigned"},"NotCollatorSigned"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.NotCollatorSigned.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Collator did not sign PoV. ")),(0,l.kt)("h3",{id:"paraheadmismatch"},"ParaHeadMismatch"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.ParaHeadMismatch.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The ",(0,l.kt)("inlineCode",{parentName:"li"},"para_head")," hash in the candidate descriptor doesn't match the hash of the actual para head in the  commitments. ")),(0,l.kt)("h3",{id:"prematurecodeupgrade"},"PrematureCodeUpgrade"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.PrematureCodeUpgrade.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Code upgrade prematurely. ")),(0,l.kt)("h3",{id:"scheduledoutoforder"},"ScheduledOutOfOrder"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.ScheduledOutOfOrder.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Scheduled cores out of order. ")),(0,l.kt)("h3",{id:"unexpectedrelayparent"},"UnexpectedRelayParent"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.UnexpectedRelayParent.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A different relay parent was provided compared to the on-chain stored one. ")),(0,l.kt)("h3",{id:"unscheduledcandidate"},"UnscheduledCandidate"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.UnscheduledCandidate.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Candidate submitted but para not scheduled. ")),(0,l.kt)("h3",{id:"unsortedorduplicatebackedcandidates"},"UnsortedOrDuplicateBackedCandidates"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.UnsortedOrDuplicateBackedCandidates.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Backed candidates are out of order (core index) or contain duplicates. ")),(0,l.kt)("h3",{id:"unsortedorduplicatedisputestatementset"},"UnsortedOrDuplicateDisputeStatementSet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.UnsortedOrDuplicateDisputeStatementSet.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Dispute statement sets are out of order or contain duplicates. ")),(0,l.kt)("h3",{id:"unsortedorduplicatevalidatorindices"},"UnsortedOrDuplicateValidatorIndices"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.UnsortedOrDuplicateValidatorIndices.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Validator indices are out of order or contains duplicates. ")),(0,l.kt)("h3",{id:"validationdatahashmismatch"},"ValidationDataHashMismatch"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.ValidationDataHashMismatch.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The validation data hash does not match expected. ")),(0,l.kt)("h3",{id:"validatorindexoutofbounds"},"ValidatorIndexOutOfBounds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.ValidatorIndexOutOfBounds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Validator index out of bounds. ")),(0,l.kt)("h3",{id:"wrongbitfieldsize"},"WrongBitfieldSize"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.WrongBitfieldSize.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Availability bitfield has unexpected size. ")),(0,l.kt)("h3",{id:"wrongcollator"},"WrongCollator"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInclusion.WrongCollator.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Candidate included with the wrong collator. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"parainherent"},"paraInherent"),(0,l.kt)("h3",{id:"candidateconcludedinvalid"},"CandidateConcludedInvalid"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInherent.CandidateConcludedInvalid.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Disputed candidate that was concluded invalid. ")),(0,l.kt)("h3",{id:"disputeinvalid"},"DisputeInvalid"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInherent.DisputeInvalid.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A dispute statement was invalid. ")),(0,l.kt)("h3",{id:"disputestatementsunsortedorduplicates"},"DisputeStatementsUnsortedOrDuplicates"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInherent.DisputeStatementsUnsortedOrDuplicates.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The ordering of dispute statements was invalid. ")),(0,l.kt)("h3",{id:"inherentoverweight"},"InherentOverweight"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInherent.InherentOverweight.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The data given to the inherent will result in an overweight block. ")),(0,l.kt)("h3",{id:"invalidparentheader"},"InvalidParentHeader"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInherent.InvalidParentHeader.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The hash of the submitted parent header doesn't correspond to the saved block hash of  the parent. ")),(0,l.kt)("h3",{id:"toomanyinclusioninherents"},"TooManyInclusionInherents"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paraInherent.TooManyInclusionInherents.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Inclusion inherent called more than once per block. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"paras"},"paras"),(0,l.kt)("h3",{id:"cannotdowngrade"},"CannotDowngrade"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.CannotDowngrade.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para cannot be downgraded to a parathread. ")),(0,l.kt)("h3",{id:"cannotoffboard"},"CannotOffboard"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.CannotOffboard.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para cannot be offboarded at this time. ")),(0,l.kt)("h3",{id:"cannotonboard"},"CannotOnboard"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.CannotOnboard.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para cannot be onboarded because it is already tracked by our system. ")),(0,l.kt)("h3",{id:"cannotupgrade"},"CannotUpgrade"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.CannotUpgrade.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para cannot be upgraded to a parachain. ")),(0,l.kt)("h3",{id:"cannotupgradecode"},"CannotUpgradeCode"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.CannotUpgradeCode.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Parachain cannot currently schedule a code upgrade. ")),(0,l.kt)("h3",{id:"notregistered"},"NotRegistered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.NotRegistered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para is not registered in our system. ")),(0,l.kt)("h3",{id:"pvfcheckdoublevote"},"PvfCheckDoubleVote"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.PvfCheckDoubleVote.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given validator already has cast a vote. ")),(0,l.kt)("h3",{id:"pvfcheckinvalidsignature"},"PvfCheckInvalidSignature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.PvfCheckInvalidSignature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The signature for the PVF pre-checking is invalid. ")),(0,l.kt)("h3",{id:"pvfcheckstatementfuture"},"PvfCheckStatementFuture"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.PvfCheckStatementFuture.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The statement for PVF pre-checking is for a future session. ")),(0,l.kt)("h3",{id:"pvfcheckstatementstale"},"PvfCheckStatementStale"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.PvfCheckStatementStale.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The statement for PVF pre-checking is stale. ")),(0,l.kt)("h3",{id:"pvfchecksubjectinvalid"},"PvfCheckSubjectInvalid"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.PvfCheckSubjectInvalid.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given PVF does not exist at the moment of process a vote. ")),(0,l.kt)("h3",{id:"pvfcheckvalidatorindexoutofbounds"},"PvfCheckValidatorIndexOutOfBounds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.paras.PvfCheckValidatorIndexOutOfBounds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Claimed validator index is out of bounds. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"parasdisputes"},"parasDisputes"),(0,l.kt)("h3",{id:"ancientdisputestatement"},"AncientDisputeStatement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.AncientDisputeStatement.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Ancient dispute statement provided. ")),(0,l.kt)("h3",{id:"duplicatedisputestatementsets"},"DuplicateDisputeStatementSets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.DuplicateDisputeStatementSets.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicate dispute statement sets provided. ")),(0,l.kt)("h3",{id:"duplicatestatement"},"DuplicateStatement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.DuplicateStatement.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Validator vote submitted more than once to dispute. ")),(0,l.kt)("h3",{id:"invalidsignature-1"},"InvalidSignature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.InvalidSignature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid signature on statement. ")),(0,l.kt)("h3",{id:"maliciousbacker"},"MaliciousBacker"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.MaliciousBacker.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A dispute vote from a malicious backer. ")),(0,l.kt)("h3",{id:"missingbackingvotes"},"MissingBackingVotes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.MissingBackingVotes.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No backing votes were provides along dispute statements. ")),(0,l.kt)("h3",{id:"singlesideddispute"},"SingleSidedDispute"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.SingleSidedDispute.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A dispute where there are only votes on one side. ")),(0,l.kt)("h3",{id:"unconfirmeddispute"},"UnconfirmedDispute"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.UnconfirmedDispute.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Unconfirmed dispute statement sets provided. ")),(0,l.kt)("h3",{id:"validatorindexoutofbounds-1"},"ValidatorIndexOutOfBounds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasDisputes.ValidatorIndexOutOfBounds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Validator index on statement is out of bounds for session. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"parasslashing"},"parasSlashing"),(0,l.kt)("h3",{id:"duplicateslashingreport"},"DuplicateSlashingReport"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasSlashing.DuplicateSlashingReport.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given slashing report is valid but already previously reported. ")),(0,l.kt)("h3",{id:"invalidcandidatehash"},"InvalidCandidateHash"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasSlashing.InvalidCandidateHash.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The candidate hash is invalid. ")),(0,l.kt)("h3",{id:"invalidkeyownershipproof-2"},"InvalidKeyOwnershipProof"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasSlashing.InvalidKeyOwnershipProof.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The key ownership proof is invalid. ")),(0,l.kt)("h3",{id:"invalidsessionindex"},"InvalidSessionIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasSlashing.InvalidSessionIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The session index is too old or invalid. ")),(0,l.kt)("h3",{id:"invalidvalidatorindex"},"InvalidValidatorIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasSlashing.InvalidValidatorIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There is no pending slash for the given validator index and time  slot. ")),(0,l.kt)("h3",{id:"validatorindexidmismatch"},"ValidatorIndexIdMismatch"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.parasSlashing.ValidatorIndexIdMismatch.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The validator index does not match the validator id. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"phragmenelection"},"phragmenElection"),(0,l.kt)("h3",{id:"duplicatedcandidate"},"DuplicatedCandidate"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.DuplicatedCandidate.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicated candidate submission. ")),(0,l.kt)("h3",{id:"insufficientcandidatefunds"},"InsufficientCandidateFunds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.InsufficientCandidateFunds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Candidate does not have enough funds. ")),(0,l.kt)("h3",{id:"invalidrenouncing"},"InvalidRenouncing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.InvalidRenouncing.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The renouncing origin presented a wrong ",(0,l.kt)("inlineCode",{parentName:"li"},"Renouncing")," parameter. ")),(0,l.kt)("h3",{id:"invalidreplacement"},"InvalidReplacement"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.InvalidReplacement.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Prediction regarding replacement after member removal is wrong. ")),(0,l.kt)("h3",{id:"invalidvotecount"},"InvalidVoteCount"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.InvalidVoteCount.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided count of number of votes is incorrect. ")),(0,l.kt)("h3",{id:"invalidwitnessdata"},"InvalidWitnessData"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.InvalidWitnessData.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The provided count of number of candidates is incorrect. ")),(0,l.kt)("h3",{id:"lowbalance"},"LowBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.LowBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot vote with stake less than minimum balance. ")),(0,l.kt)("h3",{id:"maximumvotesexceeded"},"MaximumVotesExceeded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.MaximumVotesExceeded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot vote more than maximum allowed. ")),(0,l.kt)("h3",{id:"membersubmit"},"MemberSubmit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.MemberSubmit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Member cannot re-submit candidacy. ")),(0,l.kt)("h3",{id:"mustbevoter"},"MustBeVoter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.MustBeVoter.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Must be a voter. ")),(0,l.kt)("h3",{id:"notmember-1"},"NotMember"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.NotMember.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not a member. ")),(0,l.kt)("h3",{id:"novotes"},"NoVotes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.NoVotes.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Must vote for at least one candidate. ")),(0,l.kt)("h3",{id:"runnerupsubmit"},"RunnerUpSubmit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.RunnerUpSubmit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Runner cannot re-submit candidacy. ")),(0,l.kt)("h3",{id:"toomanycandidates"},"TooManyCandidates"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.TooManyCandidates.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many candidates have been created. ")),(0,l.kt)("h3",{id:"toomanyvotes"},"TooManyVotes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.TooManyVotes.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot vote more than candidates. ")),(0,l.kt)("h3",{id:"unabletopaybond"},"UnableToPayBond"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.UnableToPayBond.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Voter can not pay voting bond. ")),(0,l.kt)("h3",{id:"unabletovote"},"UnableToVote"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.phragmenElection.UnableToVote.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot vote when no candidates or members exist. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"preimage"},"preimage"),(0,l.kt)("h3",{id:"alreadynoted"},"AlreadyNoted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.preimage.AlreadyNoted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Preimage has already been noted on-chain. ")),(0,l.kt)("h3",{id:"notauthorized"},"NotAuthorized"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.preimage.NotAuthorized.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The user is not authorized to perform this action. ")),(0,l.kt)("h3",{id:"notnoted"},"NotNoted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.preimage.NotNoted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The preimage cannot be removed since it has not yet been noted. ")),(0,l.kt)("h3",{id:"notrequested"},"NotRequested"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.preimage.NotRequested.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The preimage request cannot be removed since no outstanding requests exist. ")),(0,l.kt)("h3",{id:"requested"},"Requested"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.preimage.Requested.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A preimage may not be removed when there are outstanding requests. ")),(0,l.kt)("h3",{id:"toobig"},"TooBig"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.preimage.TooBig.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Preimage is too large to store on-chain. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"proxy"},"proxy"),(0,l.kt)("h3",{id:"duplicate"},"Duplicate"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.Duplicate.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account is already a proxy. ")),(0,l.kt)("h3",{id:"nopermission-2"},"NoPermission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.NoPermission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Call may not be made by proxy because it may escalate its privileges. ")),(0,l.kt)("h3",{id:"noselfproxy"},"NoSelfProxy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.NoSelfProxy.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot add self as proxy. ")),(0,l.kt)("h3",{id:"notfound-2"},"NotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.NotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proxy registration not found. ")),(0,l.kt)("h3",{id:"notproxy"},"NotProxy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.NotProxy.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Sender is not a proxy of the account to be proxied. ")),(0,l.kt)("h3",{id:"toomany-1"},"TooMany"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.TooMany.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are too many proxies registered or too many announcements pending. ")),(0,l.kt)("h3",{id:"unannounced"},"Unannounced"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.Unannounced.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Announcement, if made at all, was made too recently. ")),(0,l.kt)("h3",{id:"unproxyable"},"Unproxyable"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.proxy.Unproxyable.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A call which is incompatible with the proxy type's filter was attempted. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"referenda"},"referenda"),(0,l.kt)("h3",{id:"badreferendum"},"BadReferendum"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.BadReferendum.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The referendum index provided is invalid in this context. ")),(0,l.kt)("h3",{id:"badstatus"},"BadStatus"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.BadStatus.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The referendum status is invalid for this operation. ")),(0,l.kt)("h3",{id:"badtrack"},"BadTrack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.BadTrack.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The track identifier given was invalid. ")),(0,l.kt)("h3",{id:"full"},"Full"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.Full.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are already a full complement of referenda in progress for this track. ")),(0,l.kt)("h3",{id:"hasdeposit"},"HasDeposit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.HasDeposit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Referendum's decision deposit is already paid. ")),(0,l.kt)("h3",{id:"nodeposit"},"NoDeposit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.NoDeposit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The deposit cannot be refunded since none was made. ")),(0,l.kt)("h3",{id:"nopermission-3"},"NoPermission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.NoPermission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The deposit refunder is not the depositor. ")),(0,l.kt)("h3",{id:"nothingtodo"},"NothingToDo"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.NothingToDo.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There was nothing to do in the advancement. ")),(0,l.kt)("h3",{id:"notongoing-1"},"NotOngoing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.NotOngoing.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Referendum is not ongoing. ")),(0,l.kt)("h3",{id:"notrack"},"NoTrack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.NoTrack.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No track exists for the proposal origin. ")),(0,l.kt)("h3",{id:"preimagenotexist-1"},"PreimageNotExist"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.PreimageNotExist.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The preimage does not exist. ")),(0,l.kt)("h3",{id:"queueempty"},"QueueEmpty"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.QueueEmpty.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The queue of the track is empty. ")),(0,l.kt)("h3",{id:"unfinished"},"Unfinished"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.referenda.Unfinished.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Any deposit cannot be refunded until after the decision is over. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"registrar"},"registrar"),(0,l.kt)("h3",{id:"alreadyregistered"},"AlreadyRegistered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.AlreadyRegistered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The ID is already registered. ")),(0,l.kt)("h3",{id:"cannotderegister"},"CannotDeregister"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.CannotDeregister.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot deregister para ")),(0,l.kt)("h3",{id:"cannotdowngrade-1"},"CannotDowngrade"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.CannotDowngrade.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot schedule downgrade of parachain to parathread ")),(0,l.kt)("h3",{id:"cannotswap"},"CannotSwap"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.CannotSwap.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot perform a parachain slot / lifecycle swap. Check that the state of both paras are  correct for the swap to work. ")),(0,l.kt)("h3",{id:"cannotupgrade-1"},"CannotUpgrade"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.CannotUpgrade.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot schedule upgrade of parathread to parachain ")),(0,l.kt)("h3",{id:"codetoolarge"},"CodeTooLarge"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.CodeTooLarge.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid para code size. ")),(0,l.kt)("h3",{id:"emptycode"},"EmptyCode"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.EmptyCode.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Registering parachain with empty code is not allowed. ")),(0,l.kt)("h3",{id:"headdatatoolarge-1"},"HeadDataTooLarge"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.HeadDataTooLarge.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid para head data size. ")),(0,l.kt)("h3",{id:"notowner-2"},"NotOwner"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.NotOwner.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The caller is not the owner of this Id. ")),(0,l.kt)("h3",{id:"notparachain-1"},"NotParachain"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.NotParachain.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para is not a Parachain. ")),(0,l.kt)("h3",{id:"notparathread"},"NotParathread"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.NotParathread.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para is not a Parathread. ")),(0,l.kt)("h3",{id:"notregistered-1"},"NotRegistered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.NotRegistered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The ID is not registered. ")),(0,l.kt)("h3",{id:"notreserved"},"NotReserved"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.NotReserved.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The ID given for registration has not been reserved. ")),(0,l.kt)("h3",{id:"paralocked"},"ParaLocked"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.registrar.ParaLocked.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Para is locked from manipulation by the manager. Must use parachain or relay chain governance. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"scheduler"},"scheduler"),(0,l.kt)("h3",{id:"failedtoschedule"},"FailedToSchedule"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.scheduler.FailedToSchedule.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Failed to schedule a call ")),(0,l.kt)("h3",{id:"named"},"Named"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.scheduler.Named.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Attempt to use a non-named function on a named task. ")),(0,l.kt)("h3",{id:"notfound-3"},"NotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.scheduler.NotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot find the scheduled call. ")),(0,l.kt)("h3",{id:"reschedulenochange"},"RescheduleNoChange"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.scheduler.RescheduleNoChange.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Reschedule failed because it does not change scheduled time. ")),(0,l.kt)("h3",{id:"targetblocknumberinpast"},"TargetBlockNumberInPast"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.scheduler.TargetBlockNumberInPast.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Given target block number is in the past. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"session"},"session"),(0,l.kt)("h3",{id:"duplicatedkey"},"DuplicatedKey"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.session.DuplicatedKey.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Registered duplicate key. ")),(0,l.kt)("h3",{id:"invalidproof"},"InvalidProof"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.session.InvalidProof.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid ownership proof. ")),(0,l.kt)("h3",{id:"noaccount"},"NoAccount"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.session.NoAccount.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Key setting account is not live, so it's impossible to associate keys. ")),(0,l.kt)("h3",{id:"noassociatedvalidatorid"},"NoAssociatedValidatorId"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.session.NoAssociatedValidatorId.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No associated validator ID for account. ")),(0,l.kt)("h3",{id:"nokeys"},"NoKeys"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.session.NoKeys.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No keys are associated with this account. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"slots"},"slots"),(0,l.kt)("h3",{id:"leaseerror"},"LeaseError"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.slots.LeaseError.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There was an error with the lease. ")),(0,l.kt)("h3",{id:"paranotonboarding"},"ParaNotOnboarding"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.slots.ParaNotOnboarding.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The parachain ID is not onboarding. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"staking"},"staking"),(0,l.kt)("h3",{id:"alreadybonded"},"AlreadyBonded"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.AlreadyBonded.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Stash is already bonded. ")),(0,l.kt)("h3",{id:"alreadyclaimed-1"},"AlreadyClaimed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.AlreadyClaimed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Rewards for this era have already been claimed for this validator. ")),(0,l.kt)("h3",{id:"alreadypaired"},"AlreadyPaired"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.AlreadyPaired.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Controller is already paired. ")),(0,l.kt)("h3",{id:"badstate"},"BadState"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.BadState.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Internal state has become somehow corrupted and the operation cannot continue. ")),(0,l.kt)("h3",{id:"badtarget"},"BadTarget"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.BadTarget.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A nomination target was supplied that was blocked or otherwise not a validator. ")),(0,l.kt)("h3",{id:"boundnotmet-1"},"BoundNotMet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.BoundNotMet.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Some bound is not met. ")),(0,l.kt)("h3",{id:"cannotchillother"},"CannotChillOther"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.CannotChillOther.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The user has enough bond and thus cannot be chilled forcefully by an external person. ")),(0,l.kt)("h3",{id:"commissiontoolow"},"CommissionTooLow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.CommissionTooLow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Commission is too low. Must be at least ",(0,l.kt)("inlineCode",{parentName:"li"},"MinCommission"),". ")),(0,l.kt)("h3",{id:"duplicateindex"},"DuplicateIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.DuplicateIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicate index. ")),(0,l.kt)("h3",{id:"emptytargets"},"EmptyTargets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.EmptyTargets.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Targets cannot be empty. ")),(0,l.kt)("h3",{id:"fundedtarget"},"FundedTarget"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.FundedTarget.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Attempting to target a stash that still has funds. ")),(0,l.kt)("h3",{id:"incorrecthistorydepth"},"IncorrectHistoryDepth"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.IncorrectHistoryDepth.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Incorrect previous history depth input provided. ")),(0,l.kt)("h3",{id:"incorrectslashingspans"},"IncorrectSlashingSpans"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.IncorrectSlashingSpans.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Incorrect number of slashing spans provided. ")),(0,l.kt)("h3",{id:"insufficientbond"},"InsufficientBond"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.InsufficientBond.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Cannot have a validator or nominator role, with value less than the minimum defined by  governance (see ",(0,l.kt)("inlineCode",{parentName:"li"},"MinValidatorBond")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"MinNominatorBond"),"). If unbonding is the  intention, ",(0,l.kt)("inlineCode",{parentName:"li"},"chill")," first to remove one's role as validator/nominator. ")),(0,l.kt)("h3",{id:"invalideratoreward"},"InvalidEraToReward"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.InvalidEraToReward.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid era to reward. ")),(0,l.kt)("h3",{id:"invalidnumberofnominations"},"InvalidNumberOfNominations"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.InvalidNumberOfNominations.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid number of nominations. ")),(0,l.kt)("h3",{id:"invalidslashindex"},"InvalidSlashIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.InvalidSlashIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Slash record index out of bounds. ")),(0,l.kt)("h3",{id:"nomorechunks"},"NoMoreChunks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.NoMoreChunks.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Can not schedule more unlock chunks. ")),(0,l.kt)("h3",{id:"notcontroller-1"},"NotController"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.NotController.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not a controller account. ")),(0,l.kt)("h3",{id:"notsortedandunique"},"NotSortedAndUnique"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.NotSortedAndUnique.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Items are not sorted and unique. ")),(0,l.kt)("h3",{id:"notstash"},"NotStash"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.NotStash.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not a stash account. ")),(0,l.kt)("h3",{id:"nounlockchunk"},"NoUnlockChunk"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.NoUnlockChunk.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Can not rebond without unlocking chunks. ")),(0,l.kt)("h3",{id:"toomanynominators"},"TooManyNominators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.TooManyNominators.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are too many nominators in the system. Governance needs to adjust the staking  settings to keep things safe for the runtime. ")),(0,l.kt)("h3",{id:"toomanytargets"},"TooManyTargets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.TooManyTargets.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many nomination targets supplied. ")),(0,l.kt)("h3",{id:"toomanyvalidators"},"TooManyValidators"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.staking.TooManyValidators.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There are too many validator candidates in the system. Governance needs to adjust the  staking settings to keep things safe for the runtime. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"system"},"system"),(0,l.kt)("h3",{id:"callfiltered"},"CallFiltered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.system.CallFiltered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The origin filter prevent the call to be dispatched. ")),(0,l.kt)("h3",{id:"failedtoextractruntimeversion"},"FailedToExtractRuntimeVersion"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"api.errors.system.FailedToExtractRuntimeVersion.is"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"summary"),":    Failed to extract the runtime version from the new runtime. "),(0,l.kt)("p",{parentName:"li"}," Either calling ",(0,l.kt)("inlineCode",{parentName:"p"},"Core_version")," or decoding ",(0,l.kt)("inlineCode",{parentName:"p"},"RuntimeVersion")," failed. "))),(0,l.kt)("h3",{id:"invalidspecname"},"InvalidSpecName"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.system.InvalidSpecName.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The name of specification does not match between the current runtime  and the new runtime. ")),(0,l.kt)("h3",{id:"nondefaultcomposite"},"NonDefaultComposite"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.system.NonDefaultComposite.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Suicide called when the account has non-default composite data. ")),(0,l.kt)("h3",{id:"nonzerorefcount"},"NonZeroRefCount"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.system.NonZeroRefCount.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There is a non-zero reference count preventing the account from being purged. ")),(0,l.kt)("h3",{id:"specversionneedstoincrease"},"SpecVersionNeedsToIncrease"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.system.SpecVersionNeedsToIncrease.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The specification version is not allowed to decrease between the current runtime  and the new runtime. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"technicalcommittee"},"technicalCommittee"),(0,l.kt)("h3",{id:"alreadyinitialized-1"},"AlreadyInitialized"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.AlreadyInitialized.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Members are already initialized! ")),(0,l.kt)("h3",{id:"duplicateproposal-2"},"DuplicateProposal"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.DuplicateProposal.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicate proposals not allowed ")),(0,l.kt)("h3",{id:"duplicatevote-1"},"DuplicateVote"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.DuplicateVote.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Duplicate vote ignored ")),(0,l.kt)("h3",{id:"notmember-2"},"NotMember"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.NotMember.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Account is not a member ")),(0,l.kt)("h3",{id:"proposalmissing-2"},"ProposalMissing"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.ProposalMissing.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposal must exist ")),(0,l.kt)("h3",{id:"tooearly-1"},"TooEarly"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.TooEarly.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The close call was made too early, before the end of the voting. ")),(0,l.kt)("h3",{id:"toomanyproposals-1"},"TooManyProposals"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.TooManyProposals.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There can only be a maximum of ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxProposals")," active proposals. ")),(0,l.kt)("h3",{id:"wrongindex-1"},"WrongIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.WrongIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Mismatched index ")),(0,l.kt)("h3",{id:"wrongproposallength-1"},"WrongProposalLength"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.WrongProposalLength.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given length bound for the proposal was too low. ")),(0,l.kt)("h3",{id:"wrongproposalweight-1"},"WrongProposalWeight"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalCommittee.WrongProposalWeight.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given weight bound for the proposal was too low. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"technicalmembership"},"technicalMembership"),(0,l.kt)("h3",{id:"alreadymember"},"AlreadyMember"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalMembership.AlreadyMember.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Already a member. ")),(0,l.kt)("h3",{id:"notmember-3"},"NotMember"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalMembership.NotMember.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Not a member. ")),(0,l.kt)("h3",{id:"toomanymembers"},"TooManyMembers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.technicalMembership.TooManyMembers.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many members. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"tips"},"tips"),(0,l.kt)("h3",{id:"alreadyknown"},"AlreadyKnown"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.tips.AlreadyKnown.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The tip was already found/started. ")),(0,l.kt)("h3",{id:"notfinder"},"NotFinder"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.tips.NotFinder.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account attempting to retract the tip is not the finder of the tip. ")),(0,l.kt)("h3",{id:"premature-1"},"Premature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.tips.Premature.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The tip cannot be claimed/closed because it's still in the countdown period. ")),(0,l.kt)("h3",{id:"reasontoobig-1"},"ReasonTooBig"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.tips.ReasonTooBig.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The reason given is just too big. ")),(0,l.kt)("h3",{id:"stillopen"},"StillOpen"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.tips.StillOpen.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The tip cannot be claimed/closed because there are not enough tippers yet. ")),(0,l.kt)("h3",{id:"unknowntip"},"UnknownTip"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.tips.UnknownTip.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The tip hash is unknown. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"treasury"},"treasury"),(0,l.kt)("h3",{id:"insufficientpermission"},"InsufficientPermission"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.treasury.InsufficientPermission.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The spend origin is valid but the amount it is allowed to spend is lower than the  amount to be spent. ")),(0,l.kt)("h3",{id:"insufficientproposersbalance-1"},"InsufficientProposersBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.treasury.InsufficientProposersBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposer's balance is too low. ")),(0,l.kt)("h3",{id:"invalidindex-2"},"InvalidIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.treasury.InvalidIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    No proposal or bounty at that index. ")),(0,l.kt)("h3",{id:"proposalnotapproved"},"ProposalNotApproved"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.treasury.ProposalNotApproved.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Proposal has not been approved. ")),(0,l.kt)("h3",{id:"toomanyapprovals"},"TooManyApprovals"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.treasury.TooManyApprovals.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many approvals in the queue. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"ump"},"ump"),(0,l.kt)("h3",{id:"unknownmessageindex"},"UnknownMessageIndex"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.ump.UnknownMessageIndex.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The message index given is unknown. ")),(0,l.kt)("h3",{id:"weightoverlimit"},"WeightOverLimit"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.ump.WeightOverLimit.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The amount of weight given is possibly not enough for executing the message. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"utility"},"utility"),(0,l.kt)("h3",{id:"toomanycalls"},"TooManyCalls"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.utility.TooManyCalls.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many calls batched. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"vesting"},"vesting"),(0,l.kt)("h3",{id:"amountlow"},"AmountLow"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.vesting.AmountLow.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Amount being transferred is too low to create a vesting schedule. ")),(0,l.kt)("h3",{id:"atmaxvestingschedules"},"AtMaxVestingSchedules"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.vesting.AtMaxVestingSchedules.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account already has ",(0,l.kt)("inlineCode",{parentName:"li"},"MaxVestingSchedules")," count of schedules and thus  cannot add another one. Consider merging existing schedules in order to add another. ")),(0,l.kt)("h3",{id:"invalidscheduleparams"},"InvalidScheduleParams"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.vesting.InvalidScheduleParams.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Failed to create a new schedule because some parameter was invalid. ")),(0,l.kt)("h3",{id:"notvesting"},"NotVesting"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.vesting.NotVesting.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The account given is not vesting. ")),(0,l.kt)("h3",{id:"scheduleindexoutofbounds"},"ScheduleIndexOutOfBounds"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.vesting.ScheduleIndexOutOfBounds.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    An index was out of bounds of the vesting schedules. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"voterlist"},"voterList"),(0,l.kt)("h3",{id:"list"},"List"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.voterList.List.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A error in the list interface implementation. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"whitelist"},"whitelist"),(0,l.kt)("h3",{id:"callalreadywhitelisted"},"CallAlreadyWhitelisted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.whitelist.CallAlreadyWhitelisted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The call was already whitelisted; No-Op. ")),(0,l.kt)("h3",{id:"callisnotwhitelisted"},"CallIsNotWhitelisted"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.whitelist.CallIsNotWhitelisted.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The call was not whitelisted. ")),(0,l.kt)("h3",{id:"invalidcallweightwitness"},"InvalidCallWeightWitness"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.whitelist.InvalidCallWeightWitness.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The weight of the decoded call was higher than the witness. ")),(0,l.kt)("h3",{id:"unavailablepreimage"},"UnavailablePreImage"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.whitelist.UnavailablePreImage.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The preimage of the call hash could not be loaded. ")),(0,l.kt)("h3",{id:"undecodablecall"},"UndecodableCall"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.whitelist.UndecodableCall.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The call could not be decoded. ")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"xcmpallet"},"xcmPallet"),(0,l.kt)("h3",{id:"accountnotsovereign"},"AccountNotSovereign"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.AccountNotSovereign.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given account is not an identifiable sovereign account for any location. ")),(0,l.kt)("h3",{id:"alreadysubscribed"},"AlreadySubscribed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.AlreadySubscribed.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The location is invalid since it already has a subscription from us. ")),(0,l.kt)("h3",{id:"badlocation"},"BadLocation"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.BadLocation.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The given location could not be used (e.g. because it cannot be expressed in the  desired version of XCM). ")),(0,l.kt)("h3",{id:"badversion"},"BadVersion"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.BadVersion.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The version of the ",(0,l.kt)("inlineCode",{parentName:"li"},"Versioned")," value used is not able to be interpreted. ")),(0,l.kt)("h3",{id:"cannotreanchor"},"CannotReanchor"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.CannotReanchor.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Could not re-anchor the assets to declare the fees for the destination chain. ")),(0,l.kt)("h3",{id:"destinationnotinvertible"},"DestinationNotInvertible"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.DestinationNotInvertible.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The destination ",(0,l.kt)("inlineCode",{parentName:"li"},"MultiLocation")," provided cannot be inverted. ")),(0,l.kt)("h3",{id:"empty"},"Empty"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.Empty.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The assets to be sent are empty. ")),(0,l.kt)("h3",{id:"feesnotmet"},"FeesNotMet"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.FeesNotMet.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The operation required fees to be paid which the initiator could not meet. ")),(0,l.kt)("h3",{id:"filtered"},"Filtered"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.Filtered.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The message execution fails the filter. ")),(0,l.kt)("h3",{id:"inuse-1"},"InUse"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.InUse.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The unlock operation cannot succeed because there are still consumers of the lock. ")),(0,l.kt)("h3",{id:"invalidasset"},"InvalidAsset"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.InvalidAsset.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Invalid asset for the operation. ")),(0,l.kt)("h3",{id:"invalidorigin-1"},"InvalidOrigin"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.InvalidOrigin.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Origin is invalid for sending. ")),(0,l.kt)("h3",{id:"locknotfound"},"LockNotFound"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.LockNotFound.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    A remote lock with the corresponding data could not be found. ")),(0,l.kt)("h3",{id:"lowbalance-1"},"LowBalance"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.LowBalance.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The owner does not own (all) of the asset that they wish to do the operation on. ")),(0,l.kt)("h3",{id:"nosubscription"},"NoSubscription"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.NoSubscription.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The referenced subscription could not be found. ")),(0,l.kt)("h3",{id:"sendfailure"},"SendFailure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.SendFailure.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    There was some other issue (i.e. not to do with routing) in sending the message. Perhaps  a lack of space for buffering the message. ")),(0,l.kt)("h3",{id:"toomanyassets"},"TooManyAssets"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.TooManyAssets.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    Too many assets have been attempted for transfer. ")),(0,l.kt)("h3",{id:"toomanylocks"},"TooManyLocks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.TooManyLocks.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The asset owner has too many locks on the asset. ")),(0,l.kt)("h3",{id:"unreachable"},"Unreachable"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.Unreachable.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The desired destination was unreachable, generally because there is a no way of routing  to it. ")),(0,l.kt)("h3",{id:"unweighablemessage"},"UnweighableMessage"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"interface"),": ",(0,l.kt)("inlineCode",{parentName:"li"},"api.errors.xcmPallet.UnweighableMessage.is")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"summary"),":    The message's weight could not be determined.")))}N.isMDXComponent=!0}}]);