"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[3229],{4137:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,d=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4588:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(4137)),i=["components"],s={title:"Make a simple transfer"},c=void 0,p={unversionedId:"api/examples/promise/make-transfer",id:"api/examples/promise/make-transfer",title:"Make a simple transfer",description:"This sample shows how to create a transaction to make a transfer from one account to another.",source:"@site/docs/api/examples/promise/make-transfer.md",sourceDirName:"api/examples/promise",slug:"/api/examples/promise/make-transfer",permalink:"/docs/api/examples/promise/make-transfer",draft:!1,editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/api/examples/promise/make-transfer.md",tags:[],version:"current",frontMatter:{title:"Make a simple transfer"},sidebar:"reference",previous:{title:"Read storage, at a specific blockhash",permalink:"/docs/api/examples/promise/read-storage-at"},next:{title:"Traverse events",permalink:"/docs/api/examples/promise/system-events"}},l={},u=[],m={toc:u};function f(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This sample shows how to create a transaction to make a transfer from one account to another."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// Import the API, Keyring and some utility functions\nconst { ApiPromise } = require('@polkadot/api');\nconst { Keyring } = require('@polkadot/keyring');\n\nconst BOB = '5FHneW46xGXgs5mUiveU4sbTyGBzmstUspZC92UhjJM694ty';\n\nasync function main () {\n  // Instantiate the API\n  const api = await ApiPromise.create();\n\n  // Construct the keyring after the API (crypto has an async init)\n  const keyring = new Keyring({ type: 'sr25519' });\n\n  // Add Alice to our keyring with a hard-derivation path (empty phrase, so uses dev)\n  const alice = keyring.addFromUri('//Alice');\n\n  // Create a extrinsic, transferring 12345 units to Bob\n  const transfer = api.tx.balances.transfer(BOB, 12345);\n\n  // Sign and send the transaction using our account\n  const hash = await transfer.signAndSend(alice);\n\n  console.log('Transfer sent with hash', hash.toHex());\n}\n\nmain().catch(console.error).finally(() => process.exit());\n")))}f.isMDXComponent=!0}}]);