"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[6916],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return u}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),c=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=c(a),u=i,k=m["".concat(p,".").concat(u)]||m[u]||s[u]||r;return a?n.createElement(k,l(l({ref:t},d),{},{components:a})):n.createElement(k,l({ref:t},d))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4108:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return s}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),l=["components"],o={title:"Runtime"},p=void 0,c={unversionedId:"substrate/runtime",id:"substrate/runtime",title:"Runtime",description:"The following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations.",source:"@site/docs/substrate/runtime.md",sourceDirName:"substrate",slug:"/substrate/runtime",permalink:"/docs/substrate/runtime",draft:!1,editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/substrate/runtime.md",tags:[],version:"current",frontMatter:{title:"Runtime"},sidebar:"reference",previous:{title:"Overview",permalink:"/docs/substrate"},next:{title:"JSON-RPC",permalink:"/docs/substrate/rpc"}},d={},s=[{value:"AccountNonceApi",id:"accountnonceapi",level:2},{value:"accountNonce(accountId: <code>AccountId</code>): <code>Index</code>",id:"accountnonceaccountid-accountid-index",level:3},{value:"AuraApi",id:"auraapi",level:2},{value:"authorities(): <code>Vec&lt;AuthorityId&gt;</code>",id:"authorities-vecauthorityid",level:3},{value:"slotDuration(): <code>SlotDuration</code>",id:"slotduration-slotduration",level:3},{value:"AuthorFilterAPI",id:"authorfilterapi",level:2},{value:"canAuthor(author: <code>AccountId</code>, relayParent: <code>u32</code>, parentHeader: <code>Header</code>): <code>bool</code>",id:"canauthorauthor-accountid-relayparent-u32-parentheader-header-bool",level:3},{value:"AuthorityDiscoveryApi",id:"authoritydiscoveryapi",level:2},{value:"authorities(): <code>Vec&lt;AuthorityId&gt;</code>",id:"authorities-vecauthorityid-1",level:3},{value:"BabeApi",id:"babeapi",level:2},{value:"configuration(): <code>BabeGenesisConfiguration</code>",id:"configuration-babegenesisconfiguration",level:3},{value:"currentEpoch(): <code>Epoch</code>",id:"currentepoch-epoch",level:3},{value:"currentEpochStart(): <code>Slot</code>",id:"currentepochstart-slot",level:3},{value:"generateKeyOwnershipProof(slot: <code>Slot</code>, authorityId: <code>AuthorityId</code>): <code>Option&lt;OpaqueKeyOwnershipProof&gt;</code>",id:"generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof",level:3},{value:"nextEpoch(): <code>Epoch</code>",id:"nextepoch-epoch",level:3},{value:"submitReportEquivocationUnsignedExtrinsic(equivocationProof: <code>BabeEquivocationProof</code>, keyOwnerProof: <code>OpaqueKeyOwnershipProof</code>): <code>Option&lt;Null&gt;</code>",id:"submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull",level:3},{value:"BeefyApi",id:"beefyapi",level:2},{value:"validatorSet(): <code>Option&lt;ValidatorSet&gt;</code>",id:"validatorset-optionvalidatorset",level:3},{value:"BeefyMmrApi",id:"beefymmrapi",level:2},{value:"authoritySetProof(): <code>BeefyAuthoritySet</code>",id:"authoritysetproof-beefyauthorityset",level:3},{value:"nextAuthoritySetProof(): <code>BeefyNextAuthoritySet</code>",id:"nextauthoritysetproof-beefynextauthorityset",level:3},{value:"Benchmark",id:"benchmark",level:2},{value:"benchmarkMetadata(extra: <code>bool</code>): <code>(Vec&lt;BenchmarkList&gt;, Vec&lt;StorageInfo&gt;)</code>",id:"benchmarkmetadataextra-bool-vecbenchmarklist-vecstorageinfo",level:3},{value:"dispatchBenchmark(config: <code>BenchmarkConfig</code>): <code>Result&lt;Vec&lt;BenchmarkBatch&gt;, Text&gt;</code>",id:"dispatchbenchmarkconfig-benchmarkconfig-resultvecbenchmarkbatch-text",level:3},{value:"BlockBuilder",id:"blockbuilder",level:2},{value:"applyExtrinsic(extrinsic: <code>Extrinsic</code>): <code>ApplyExtrinsicResult</code>",id:"applyextrinsicextrinsic-extrinsic-applyextrinsicresult",level:3},{value:"checkInherents(block: <code>Block</code>, data: <code>InherentData</code>): <code>CheckInherentsResult</code>",id:"checkinherentsblock-block-data-inherentdata-checkinherentsresult",level:3},{value:"finalizeBlock(): <code>Header</code>",id:"finalizeblock-header",level:3},{value:"inherentExtrinsics(inherent: <code>InherentData</code>): <code>Vec&lt;Extrinsic&gt;</code>",id:"inherentextrinsicsinherent-inherentdata-vecextrinsic",level:3},{value:"CollectCollationInfo",id:"collectcollationinfo",level:2},{value:"collectCollationInfo(header: <code>Header</code>): <code>CollationInfo</code>",id:"collectcollationinfoheader-header-collationinfo",level:3},{value:"ContractsApi",id:"contractsapi",level:2},{value:"call(origin: <code>AccountId</code>, dest: <code>AccountId</code>, value: <code>Balance</code>, gasLimit: <code>Option&lt;WeightV2&gt;</code>, storageDepositLimit: <code>Option&lt;Balance&gt;</code>, inputData: <code>Vec&lt;u8&gt;</code>): <code>ContractExecResult</code>",id:"callorigin-accountid-dest-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-inputdata-vecu8-contractexecresult",level:3},{value:"getStorage(address: <code>AccountId</code>, key: <code>Bytes</code>): <code>Option&lt;Bytes&gt;</code>",id:"getstorageaddress-accountid-key-bytes-optionbytes",level:3},{value:"instantiate(origin: <code>AccountId</code>, value: <code>Balance</code>, gasLimit: <code>Option&lt;WeightV2&gt;</code>, storageDepositLimit: <code>Option&lt;Balance&gt;</code>, code: <code>CodeSource</code>, data: <code>Bytes</code>, salt: <code>Bytes</code>): <code>ContractInstantiateResult</code>",id:"instantiateorigin-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-code-codesource-data-bytes-salt-bytes-contractinstantiateresult",level:3},{value:"uploadCode(origin: <code>AccountId</code>, code: <code>Bytes</code>, storageDepositLimit: <code>Option&lt;Balance&gt;</code>): <code>CodeUploadResult</code>",id:"uploadcodeorigin-accountid-code-bytes-storagedepositlimit-optionbalance-codeuploadresult",level:3},{value:"ConvertTransactionRuntimeApi",id:"converttransactionruntimeapi",level:2},{value:"convertTransaction(transaction: <code>TransactionV2</code>): <code>Extrinsic</code>",id:"converttransactiontransaction-transactionv2-extrinsic",level:3},{value:"Core",id:"core",level:2},{value:"executeBlock(block: <code>Block</code>): <code>Null</code>",id:"executeblockblock-block-null",level:3},{value:"initializeBlock(header: <code>Header</code>): <code>Null</code>",id:"initializeblockheader-header-null",level:3},{value:"version(): <code>RuntimeVersion</code>",id:"version-runtimeversion",level:3},{value:"DebugRuntimeApi",id:"debugruntimeapi",level:2},{value:"traceBlock(extrinsics: <code>Vec&lt;Extrinsic&gt;</code>, knownTransactions: <code>Vec&lt;H256&gt;</code>): <code>Result&lt;(), DispatchError&gt;</code>",id:"traceblockextrinsics-vecextrinsic-knowntransactions-vech256-result-dispatcherror",level:3},{value:"traceTransaction(extrinsics: <code>Vec&lt;Extrinsic&gt;</code>, transaction: <code>EthTransaction</code>): <code>Result&lt;(), DispatchError&gt;</code>",id:"tracetransactionextrinsics-vecextrinsic-transaction-ethtransaction-result-dispatcherror",level:3},{value:"DifficultyApi",id:"difficultyapi",level:2},{value:"difficulty(): <code>Raw</code>",id:"difficulty-raw",level:3},{value:"EthereumRuntimeRPCApi",id:"ethereumruntimerpcapi",level:2},{value:"accountBasic(address: <code>H160</code>): <code>EvmAccount</code>",id:"accountbasicaddress-h160-evmaccount",level:3},{value:"accountCodeAt(address: <code>H160</code>): <code>Bytes</code>",id:"accountcodeataddress-h160-bytes",level:3},{value:"author(): <code>H160</code>",id:"author-h160",level:3},{value:"call(from: <code>H160</code>, to: <code>H160</code>, data: <code>Vec&lt;u8&gt;</code>, value: <code>U256</code>, gasLimit: <code>U256</code>, maxFeePerGas: <code>Option&lt;U256&gt;</code>, maxPriorityFeePerGas: <code>Option&lt;U256&gt;</code>, nonce: <code>Option&lt;U256&gt;</code>, estimate: <code>bool</code>, accessList: <code>Option&lt;Vec&lt;(H160, Vec&lt;H256&gt;)&gt;&gt;</code>): <code>Result&lt;EvmCallInfo, DispatchError&gt;</code>",id:"callfrom-h160-to-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcallinfo-dispatcherror",level:3},{value:"chainId(): <code>u64</code>",id:"chainid-u64",level:3},{value:"create(from: <code>H160</code>, data: <code>Vec&lt;u8&gt;</code>, value: <code>U256</code>, gasLimit: <code>U256</code>, maxFeePerGas: <code>Option&lt;U256&gt;</code>, maxPriorityFeePerGas: <code>Option&lt;U256&gt;</code>, nonce: <code>Option&lt;U256&gt;</code>, estimate: <code>bool</code>, accessList: <code>Option&lt;Vec&lt;(H160, Vec&lt;H256&gt;)&gt;&gt;</code>): <code>Result&lt;EvmCreateInfo, DispatchError&gt;</code>",id:"createfrom-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcreateinfo-dispatcherror",level:3},{value:"currentAll(): <code>(Option&lt;BlockV2&gt;, Option&lt;Vec&lt;EthReceiptV3&gt;&gt;, Option&lt;Vec&lt;EthTransactionStatus&gt;&gt;)</code>",id:"currentall-optionblockv2-optionvecethreceiptv3-optionvecethtransactionstatus",level:3},{value:"currentBlock(): <code>BlockV2</code>",id:"currentblock-blockv2",level:3},{value:"currentReceipts(): <code>Option&lt;Vec&lt;EthReceiptV3&gt;&gt;</code>",id:"currentreceipts-optionvecethreceiptv3",level:3},{value:"currentTransactionStatuses(): <code>Option&lt;Vec&lt;EthTransactionStatus&gt;&gt;</code>",id:"currenttransactionstatuses-optionvecethtransactionstatus",level:3},{value:"elasticity(): <code>Option&lt;Permill&gt;</code>",id:"elasticity-optionpermill",level:3},{value:"extrinsicFilter(xts: <code>Vec&lt;Extrinsic&gt;</code>): <code>Vec&lt;TransactionV2&gt;</code>",id:"extrinsicfilterxts-vecextrinsic-vectransactionv2",level:3},{value:"gasPrice(): <code>u256</code>",id:"gasprice-u256",level:3},{value:"storageAt(address: <code>H160</code>, index: <code>u256</code>): <code>H256</code>",id:"storageataddress-h160-index-u256-h256",level:3},{value:"GrandpaApi",id:"grandpaapi",level:2},{value:"currentSetId(): <code>SetId</code>",id:"currentsetid-setid",level:3},{value:"generateKeyOwnershipProof(setId: <code>SetId</code>, authorityId: <code>AuthorityId</code>): <code>Option&lt;OpaqueKeyOwnershipProof&gt;</code>",id:"generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof",level:3},{value:"grandpaAuthorities(): <code>AuthorityList</code>",id:"grandpaauthorities-authoritylist",level:3},{value:"submitReportEquivocationUnsignedExtrinsic(equivocationProof: <code>GrandpaEquivocationProof</code>, keyOwnerProof: <code>OpaqueKeyOwnershipProof</code>): <code>Option&lt;Null&gt;</code>",id:"submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull",level:3},{value:"KusamaFinalityApi",id:"kusamafinalityapi",level:2},{value:"bestFinalized(): <code>(BlockNumber, Hash)</code>",id:"bestfinalized-blocknumber-hash",level:3},{value:"Metadata",id:"metadata",level:2},{value:"metadata(): <code>OpaqueMetadata</code>",id:"metadata-opaquemetadata",level:3},{value:"MmrApi",id:"mmrapi",level:2},{value:"generateBatchProof(leafIndices: <code>Vec&lt;MmrLeafIndex&gt;</code>): <code>Result&lt;(Vec&lt;MmrEncodableOpaqueLeaf&gt;, MmrBatchProof), MmrError&gt;</code>",id:"generatebatchproofleafindices-vecmmrleafindex-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror",level:3},{value:"generateProof(leafIndex: <code>MmrLeafIndex</code>): <code>Result&lt;(MmrEncodableOpaqueLeaf, MmrProof), MmrError&gt;</code>",id:"generateproofleafindex-mmrleafindex-resultmmrencodableopaqueleaf-mmrproof-mmrerror",level:3},{value:"mmrRoot(): <code>Result&lt;Hash, MmrError&gt;</code>",id:"mmrroot-resulthash-mmrerror",level:3},{value:"verifyBatchProof(leaves: <code>Vec&lt;MmrEncodableOpaqueLeaf&gt;</code>, proof: <code>MmrBatchProof</code>): <code>Result&lt;(), MmrError&gt;</code>",id:"verifybatchproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror",level:3},{value:"verifyBatchProofStateless(root: <code>Hash</code>, leaves: <code>Vec&lt;MmrEncodableOpaqueLeaf&gt;</code>, proof: <code>MmrBatchProof</code>): <code>Result&lt;(), MmrError&gt;</code>",id:"verifybatchproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror",level:3},{value:"verifyProof(leaf: <code>MmrEncodableOpaqueLeaf</code>, proof: <code>MmrProof</code>): <code>Result&lt;(), MmrError&gt;</code>",id:"verifyproofleaf-mmrencodableopaqueleaf-proof-mmrproof-result-mmrerror",level:3},{value:"verifyProofStateless(root: <code>Hash</code>, leaf: <code>MmrEncodableOpaqueLeaf</code>, proof: <code>MmrProof</code>): <code>Result&lt;(), MmrError&gt;</code>",id:"verifyproofstatelessroot-hash-leaf-mmrencodableopaqueleaf-proof-mmrproof-result-mmrerror",level:3},{value:"NimbusApi",id:"nimbusapi",level:2},{value:"canAuthor(author: <code>AccountId</code>, relayParent: <code>u32</code>, parentHeader: <code>Header</code>): <code>bool</code>",id:"canauthorauthor-accountid-relayparent-u32-parentheader-header-bool-1",level:3},{value:"NominationPoolsApi",id:"nominationpoolsapi",level:2},{value:"pendingRewards(member: <code>AccountId</code>): <code>Balance</code>",id:"pendingrewardsmember-accountid-balance",level:3},{value:"OffchainWorkerApi",id:"offchainworkerapi",level:2},{value:"offchainWorker(header: <code>Header</code>): <code>Null</code>",id:"offchainworkerheader-header-null",level:3},{value:"OracleApi",id:"oracleapi",level:2},{value:"getAllValues(providerId: <code>Raw</code>): <code>Raw</code>",id:"getallvaluesproviderid-raw-raw",level:3},{value:"getValue(providerId: <code>Raw</code>, key: <code>Raw</code>): <code>Option&lt;Raw&gt;</code>",id:"getvalueproviderid-raw-key-raw-optionraw",level:3},{value:"ParachainHost",id:"parachainhost",level:2},{value:"assumedValidationData(paraId: <code>ParaId</code>, hash: <code>Hash</code>): <code>Option&lt;(PersistedValidationData, ValidationCodeHash)&gt;</code>",id:"assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash",level:3},{value:"availabilityCores(): <code>Vec&lt;CoreState&gt;</code>",id:"availabilitycores-veccorestate",level:3},{value:"candidateEvents(): <code>Vec&lt;CandidateEvent&gt;</code>",id:"candidateevents-veccandidateevent",level:3},{value:"candidatePendingAvailability(paraId: <code>ParaId</code>): <code>Option&lt;CommittedCandidateReceipt&gt;</code>",id:"candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt",level:3},{value:"checkValidationOutputs(paraId: <code>ParaId</code>, outputs: <code>CandidateCommitments</code>): <code>bool</code>",id:"checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool",level:3},{value:"disputes(): <code>Vec&lt;(SessionIndex, CandidateHash, DisputeState)&gt;</code>",id:"disputes-vecsessionindex-candidatehash-disputestate",level:3},{value:"dmqContents(paraId: <code>ParaId</code>): <code>Vec&lt;InboundDownwardMessage&gt;</code>",id:"dmqcontentsparaid-paraid-vecinbounddownwardmessage",level:3},{value:"inboundHrmpChannelsContents(paraId: <code>ParaId</code>): <code>Vec&lt;InboundHrmpMessage&gt;</code>",id:"inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage",level:3},{value:"onChainVotes(): <code>Option&lt;ScrapedOnChainVotes&gt;</code>",id:"onchainvotes-optionscrapedonchainvotes",level:3},{value:"persistedValidationData(paraId: <code>ParaId</code>, assumption: <code>OccupiedCoreAssumption</code>): <code>Option&lt;PersistedValidationData&gt;</code>",id:"persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata",level:3},{value:"pvfsRequirePrecheck(): <code>Vec&lt;ValidationCodeHash&gt;</code>",id:"pvfsrequireprecheck-vecvalidationcodehash",level:3},{value:"sessionIndexForChild(): <code>SessionIndex</code>",id:"sessionindexforchild-sessionindex",level:3},{value:"sessionInfo(index: <code>SessionIndex</code>): <code>Option&lt;SessionInfo&gt;</code>",id:"sessioninfoindex-sessionindex-optionsessioninfo",level:3},{value:"submitPvfCheckStatement(stmt: <code>PvfCheckStatement</code>, signature: <code>ValidatorSignature</code>): <code>Null</code>",id:"submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null",level:3},{value:"validationCode(paraId: <code>ParaId</code>, assumption: <code>OccupiedCoreAssumption</code>): <code>ValidationCode</code>",id:"validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode",level:3},{value:"validationCodeByHash(hash: <code>ValidationCodeHash</code>): <code>Option&lt;ValidationCode&gt;</code>",id:"validationcodebyhashhash-validationcodehash-optionvalidationcode",level:3},{value:"validationCodeHash(paraId: <code>ParaId</code>, assumption: <code>OccupiedCoreAssumption</code>): <code>Option&lt;ValidationCodeHash&gt;</code>",id:"validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash",level:3},{value:"validatorGroups(): <code>(Vec&lt;Vec&lt;ParaValidatorIndex&gt;&gt;, GroupRotationInfo)</code>",id:"validatorgroups-vecvecparavalidatorindex-grouprotationinfo",level:3},{value:"validators(): <code>Vec&lt;ValidatorId&gt;</code>",id:"validators-vecvalidatorid",level:3},{value:"PolkadotFinalityApi",id:"polkadotfinalityapi",level:2},{value:"bestFinalized(): <code>(BlockNumber, Hash)</code>",id:"bestfinalized-blocknumber-hash-1",level:3},{value:"RococoFinalityApi",id:"rococofinalityapi",level:2},{value:"bestFinalized(): <code>(BlockNumber, Hash)</code>",id:"bestfinalized-blocknumber-hash-2",level:3},{value:"SessionKeys",id:"sessionkeys",level:2},{value:"decodeSessionKeys(encoded: <code>Bytes</code>): <code>Option&lt;Vec&lt;(Bytes, KeyTypeId)&gt;&gt;</code>",id:"decodesessionkeysencoded-bytes-optionvecbytes-keytypeid",level:3},{value:"generateSessionKeys(seed: <code>Option&lt;Bytes&gt;</code>): <code>Bytes</code>",id:"generatesessionkeysseed-optionbytes-bytes",level:3},{value:"TaggedTransactionQueue",id:"taggedtransactionqueue",level:2},{value:"validateTransaction(source: <code>TransactionSource</code>, tx: <code>Extrinsic</code>, blockHash: <code>BlockHash</code>): <code>TransactionValidity</code>",id:"validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity",level:3},{value:"TimestampApi",id:"timestampapi",level:2},{value:"timestamp(): <code>Moment</code>",id:"timestamp-moment",level:3},{value:"TokensApi",id:"tokensapi",level:2},{value:"queryExistentialDeposit(currencyId: <code>Raw</code>): <code>u128</code>",id:"queryexistentialdepositcurrencyid-raw-u128",level:3},{value:"TransactionPaymentApi",id:"transactionpaymentapi",level:2},{value:"queryFeeDetails(uxt: <code>Extrinsic</code>, len: <code>u32</code>): <code>FeeDetails</code>",id:"queryfeedetailsuxt-extrinsic-len-u32-feedetails",level:3},{value:"queryInfo(uxt: <code>Extrinsic</code>, len: <code>u32</code>): <code>RuntimeDispatchInfo</code>",id:"queryinfouxt-extrinsic-len-u32-runtimedispatchinfo",level:3},{value:"TransactionPaymentCallApi",id:"transactionpaymentcallapi",level:2},{value:"queryCallFeeDetails(call: <code>Call</code>, len: <code>u32</code>): <code>FeeDetails</code>",id:"querycallfeedetailscall-call-len-u32-feedetails",level:3},{value:"queryCallInfo(call: <code>Call</code>, len: <code>u32</code>): <code>RuntimeDispatchInfo</code>",id:"querycallinfocall-call-len-u32-runtimedispatchinfo",level:3},{value:"WestendFinalityApi",id:"westendfinalityapi",level:2},{value:"bestFinalized(): <code>(BlockNumber, Hash)</code>",id:"bestfinalized-blocknumber-hash-3",level:3}],m={toc:s};function u(e){var t=e.components,a=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#accountnonceapi"},"accountNonceApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#auraapi"},"auraApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#authorfilterapi"},"authorFilterAPI")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#authoritydiscoveryapi"},"authorityDiscoveryApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#babeapi"},"babeApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#beefyapi"},"beefyApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#beefymmrapi"},"beefyMmrApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#benchmark"},"benchmark")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#blockbuilder"},"blockBuilder")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#collectcollationinfo"},"collectCollationInfo")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#contractsapi"},"contractsApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#converttransactionruntimeapi"},"convertTransactionRuntimeApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#core"},"core")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#debugruntimeapi"},"debugRuntimeApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#difficultyapi"},"difficultyApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#ethereumruntimerpcapi"},"ethereumRuntimeRPCApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#grandpaapi"},"grandpaApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#kusamafinalityapi"},"kusamaFinalityApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#metadata"},"metadata")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#mmrapi"},"mmrApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#nimbusapi"},"nimbusApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#nominationpoolsapi"},"nominationPoolsApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#offchainworkerapi"},"offchainWorkerApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#oracleapi"},"oracleApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#parachainhost"},"parachainHost")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#polkadotfinalityapi"},"polkadotFinalityApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#rococofinalityapi"},"rococoFinalityApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#sessionkeys"},"sessionKeys")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#taggedtransactionqueue"},"taggedTransactionQueue")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#timestampapi"},"timestampApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#tokensapi"},"tokensApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#transactionpaymentapi"},"transactionPaymentApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#transactionpaymentcallapi"},"transactionPaymentCallApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#westendfinalityapi"},"westendFinalityApi"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"accountnonceapi"},"AccountNonceApi"),(0,r.kt)("h3",{id:"accountnonceaccountid-accountid-index"},"accountNonce(accountId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Index")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.accountNonceApi.accountNonce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AccountNonceApi_account_nonce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The API to query account nonce (aka transaction index)")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"auraapi"},"AuraApi"),(0,r.kt)("h3",{id:"authorities-vecauthorityid"},"authorities(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<AuthorityId>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.auraApi.authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AuraApi_authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the current set of authorities.")),(0,r.kt)("h3",{id:"slotduration-slotduration"},"slotDuration(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SlotDuration")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.auraApi.slotDuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AuraApi_slot_duration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the slot duration for Aura.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"authorfilterapi"},"AuthorFilterAPI"),(0,r.kt)("h3",{id:"canauthorauthor-accountid-relayparent-u32-parentheader-header-bool"},"canAuthor(author: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", relayParent: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", parentHeader: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.authorFilterAPI.canAuthor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AuthorFilterAPI_can_author")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The runtime api used to predict whether an author will be eligible in the given slot")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"authoritydiscoveryapi"},"AuthorityDiscoveryApi"),(0,r.kt)("h3",{id:"authorities-vecauthorityid-1"},"authorities(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<AuthorityId>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.authorityDiscoveryApi.authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AuthorityDiscoveryApi_authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieve authority identifiers of the current and next authority set.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"babeapi"},"BabeApi"),(0,r.kt)("h3",{id:"configuration-babegenesisconfiguration"},"configuration(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BabeGenesisConfiguration")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the genesis configuration for BABE. The configuration is only read on genesis.")),(0,r.kt)("h3",{id:"currentepoch-epoch"},"currentEpoch(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Epoch")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.currentEpoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_current_epoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns information regarding the current epoch.")),(0,r.kt)("h3",{id:"currentepochstart-slot"},"currentEpochStart(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Slot")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.currentEpochStart")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_current_epoch_start")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the slot that started the current epoch.")),(0,r.kt)("h3",{id:"generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof"},"generateKeyOwnershipProof(slot: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Slot"),", authorityId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueKeyOwnershipProof>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.generateKeyOwnershipProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_generate_key_ownership_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generates a proof of key ownership for the given authority in the current epoch.")),(0,r.kt)("h3",{id:"nextepoch-epoch"},"nextEpoch(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Epoch")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.nextEpoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_next_epoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns information regarding the next epoch (which was already previously announced).")),(0,r.kt)("h3",{id:"submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull"},"submitReportEquivocationUnsignedExtrinsic(equivocationProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BabeEquivocationProof"),", keyOwnerProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueKeyOwnershipProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Null>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.submitReportEquivocationUnsignedExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_submit_report_equivocation_unsigned_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits an unsigned extrinsic to report an equivocation.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"beefyapi"},"BeefyApi"),(0,r.kt)("h3",{id:"validatorset-optionvalidatorset"},"validatorSet(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidatorSet>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyApi.validatorSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyApi_validator_set")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the current active BEEFY validator set")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"beefymmrapi"},"BeefyMmrApi"),(0,r.kt)("h3",{id:"authoritysetproof-beefyauthorityset"},"authoritySetProof(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BeefyAuthoritySet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyMmrApi.authoritySetProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyMmrApi_authority_set_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the currently active BEEFY authority set proof.")),(0,r.kt)("h3",{id:"nextauthoritysetproof-beefynextauthorityset"},"nextAuthoritySetProof(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BeefyNextAuthoritySet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyMmrApi.nextAuthoritySetProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyMmrApi_next_authority_set_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the next/queued BEEFY authority set proof.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"benchmark"},"Benchmark"),(0,r.kt)("h3",{id:"benchmarkmetadataextra-bool-vecbenchmarklist-vecstorageinfo"},"benchmarkMetadata(extra: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(Vec<BenchmarkList>, Vec<StorageInfo>)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.benchmark.benchmarkMetadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Benchmark_benchmark_metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the benchmark metadata available for this runtime.")),(0,r.kt)("h3",{id:"dispatchbenchmarkconfig-benchmarkconfig-resultvecbenchmarkbatch-text"},"dispatchBenchmark(config: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BenchmarkConfig"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<Vec<BenchmarkBatch>, Text>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.benchmark.dispatchBenchmark")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Benchmark_dispatch_benchmark")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Dispatch the given benchmark.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"blockbuilder"},"BlockBuilder"),(0,r.kt)("h3",{id:"applyextrinsicextrinsic-extrinsic-applyextrinsicresult"},"applyExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ApplyExtrinsicResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.applyExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_apply_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Apply the given extrinsic.")),(0,r.kt)("h3",{id:"checkinherentsblock-block-data-inherentdata-checkinherentsresult"},"checkInherents(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Block"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"InherentData"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CheckInherentsResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.checkInherents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_check_inherents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Check that the inherents are valid.")),(0,r.kt)("h3",{id:"finalizeblock-header"},"finalizeBlock(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_finalize_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Finish the current block.")),(0,r.kt)("h3",{id:"inherentextrinsicsinherent-inherentdata-vecextrinsic"},"inherentExtrinsics(inherent: ",(0,r.kt)("inlineCode",{parentName:"h3"},"InherentData"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.inherentExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_inherent_extrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate inherent extrinsics.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"collectcollationinfo"},"CollectCollationInfo"),(0,r.kt)("h3",{id:"collectcollationinfoheader-header-collationinfo"},"collectCollationInfo(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CollationInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.collectCollationInfo.collectCollationInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"CollectCollationInfo_collect_collation_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Collect information about a collation.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"contractsapi"},"ContractsApi"),(0,r.kt)("h3",{id:"callorigin-accountid-dest-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-inputdata-vecu8-contractexecresult"},"call(origin: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", dest: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", value: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance"),", gasLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<WeightV2>"),", storageDepositLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Balance>"),", inputData: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u8>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ContractExecResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.contractsApi.call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ContractsApi_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Perform a call from a specified account to a given contract.")),(0,r.kt)("h3",{id:"getstorageaddress-accountid-key-bytes-optionbytes"},"getStorage(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.contractsApi.getStorage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ContractsApi_get_storage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query a given storage key in a given contract.")),(0,r.kt)("h3",{id:"instantiateorigin-accountid-value-balance-gaslimit-optionweightv2-storagedepositlimit-optionbalance-code-codesource-data-bytes-salt-bytes-contractinstantiateresult"},"instantiate(origin: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", value: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance"),", gasLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<WeightV2>"),", storageDepositLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Balance>"),", code: ",(0,r.kt)("inlineCode",{parentName:"h3"},"CodeSource"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", salt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ContractInstantiateResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.contractsApi.instantiate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ContractsApi_instantiate")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Instantiate a new contract.")),(0,r.kt)("h3",{id:"uploadcodeorigin-accountid-code-bytes-storagedepositlimit-optionbalance-codeuploadresult"},"uploadCode(origin: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", code: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),", storageDepositLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Balance>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CodeUploadResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.contractsApi.uploadCode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ContractsApi_upload_code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Upload new code without instantiating a contract from it.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"converttransactionruntimeapi"},"ConvertTransactionRuntimeApi"),(0,r.kt)("h3",{id:"converttransactiontransaction-transactionv2-extrinsic"},"convertTransaction(transaction: ",(0,r.kt)("inlineCode",{parentName:"h3"},"TransactionV2"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.convertTransactionRuntimeApi.convertTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ConvertTransactionRuntimeApi_convert_transaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Converts an Ethereum-style transaction to Extrinsic")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"core"},"Core"),(0,r.kt)("h3",{id:"executeblockblock-block-null"},"executeBlock(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Block"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.executeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Core_execute_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Execute the given block.")),(0,r.kt)("h3",{id:"initializeblockheader-header-null"},"initializeBlock(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.initializeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Core_initialize_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Initialize a block with the given header.")),(0,r.kt)("h3",{id:"version-runtimeversion"},"version(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Core_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the version of the runtime.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"debugruntimeapi"},"DebugRuntimeApi"),(0,r.kt)("h3",{id:"traceblockextrinsics-vecextrinsic-knowntransactions-vech256-result-dispatcherror"},"traceBlock(extrinsics: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>"),", knownTransactions: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<H256>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), DispatchError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.debugRuntimeApi.traceBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DebugRuntimeApi_trace_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Trace all block extrinsics")),(0,r.kt)("h3",{id:"tracetransactionextrinsics-vecextrinsic-transaction-ethtransaction-result-dispatcherror"},"traceTransaction(extrinsics: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>"),", transaction: ",(0,r.kt)("inlineCode",{parentName:"h3"},"EthTransaction"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), DispatchError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.debugRuntimeApi.traceTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DebugRuntimeApi_trace_transaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Trace transaction extrinsics")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"difficultyapi"},"DifficultyApi"),(0,r.kt)("h3",{id:"difficulty-raw"},"difficulty(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Raw")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.difficultyApi.difficulty")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DifficultyApi_difficulty")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the target difficulty of the next block.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"ethereumruntimerpcapi"},"EthereumRuntimeRPCApi"),(0,r.kt)("h3",{id:"accountbasicaddress-h160-evmaccount"},"accountBasic(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"EvmAccount")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.accountBasic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_account_basic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns pallet_evm::Accounts by address.")),(0,r.kt)("h3",{id:"accountcodeataddress-h160-bytes"},"accountCodeAt(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.accountCodeAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_account_code_at")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": For a given account address, returns pallet_evm::AccountCodes.")),(0,r.kt)("h3",{id:"author-h160"},"author(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.author")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_author")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the converted FindAuthor::find_author authority id.")),(0,r.kt)("h3",{id:"callfrom-h160-to-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcallinfo-dispatcherror"},"call(from: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", to: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u8>"),", value: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),", gasLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),", maxFeePerGas: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<U256>"),", maxPriorityFeePerGas: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<U256>"),", nonce: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<U256>"),", estimate: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),", accessList: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<(H160, Vec<H256>)>>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<EvmCallInfo, DispatchError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_call")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a frame_ethereum::call response. If ",(0,r.kt)("inlineCode",{parentName:"li"},"estimate")," is true,")),(0,r.kt)("h3",{id:"chainid-u64"},"chainId(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u64")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.chainId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_chain_id")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns runtime defined pallet_evm::ChainId.")),(0,r.kt)("h3",{id:"createfrom-h160-data-vecu8-value-u256-gaslimit-u256-maxfeepergas-optionu256-maxpriorityfeepergas-optionu256-nonce-optionu256-estimate-bool-accesslist-optionvech160-vech256-resultevmcreateinfo-dispatcherror"},"create(from: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u8>"),", value: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),", gasLimit: ",(0,r.kt)("inlineCode",{parentName:"h3"},"U256"),", maxFeePerGas: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<U256>"),", maxPriorityFeePerGas: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<U256>"),", nonce: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<U256>"),", estimate: ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool"),", accessList: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<(H160, Vec<H256>)>>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<EvmCreateInfo, DispatchError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.create")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_create")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a frame_ethereum::call response. If ",(0,r.kt)("inlineCode",{parentName:"li"},"estimate")," is true,")),(0,r.kt)("h3",{id:"currentall-optionblockv2-optionvecethreceiptv3-optionvecethtransactionstatus"},"currentAll(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.currentAll")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_current_all")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return all the current data for a block in a single runtime call.")),(0,r.kt)("h3",{id:"currentblock-blockv2"},"currentBlock(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockV2")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.currentBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_current_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the current block.")),(0,r.kt)("h3",{id:"currentreceipts-optionvecethreceiptv3"},"currentReceipts(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<EthReceiptV3>>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.currentReceipts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_current_receipts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the current receipt.")),(0,r.kt)("h3",{id:"currenttransactionstatuses-optionvecethtransactionstatus"},"currentTransactionStatuses(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<EthTransactionStatus>>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.currentTransactionStatuses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_current_transaction_statuses")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the current transaction status.")),(0,r.kt)("h3",{id:"elasticity-optionpermill"},"elasticity(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Permill>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.elasticity")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_elasticity")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the elasticity multiplier.")),(0,r.kt)("h3",{id:"extrinsicfilterxts-vecextrinsic-vectransactionv2"},"extrinsicFilter(xts: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<TransactionV2>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.extrinsicFilter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_extrinsic_filter")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Receives a ",(0,r.kt)("inlineCode",{parentName:"li"},"Vec<OpaqueExtrinsic>")," and filters all the ethereum transactions.")),(0,r.kt)("h3",{id:"gasprice-u256"},"gasPrice(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.gasPrice")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_gas_price")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns FixedGasPrice::min_gas_price")),(0,r.kt)("h3",{id:"storageataddress-h160-index-u256-h256"},"storageAt(address: ",(0,r.kt)("inlineCode",{parentName:"h3"},"H160"),", index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u256"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"H256")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.ethereumRuntimeRPCApi.storageAt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"EthereumRuntimeRPCApi_storage_at")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": For a given account address and index, returns pallet_evm::AccountStorages.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"grandpaapi"},"GrandpaApi"),(0,r.kt)("h3",{id:"currentsetid-setid"},"currentSetId(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SetId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.currentSetId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_current_set_id")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get current GRANDPA authority set id.")),(0,r.kt)("h3",{id:"generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof"},"generateKeyOwnershipProof(setId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SetId"),", authorityId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueKeyOwnershipProof>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.generateKeyOwnershipProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_generate_key_ownership_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generates a proof of key ownership for the given authority in the given set.")),(0,r.kt)("h3",{id:"grandpaauthorities-authoritylist"},"grandpaAuthorities(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityList")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.grandpaAuthorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_grandpa_authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.")),(0,r.kt)("h3",{id:"submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull"},"submitReportEquivocationUnsignedExtrinsic(equivocationProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"GrandpaEquivocationProof"),", keyOwnerProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueKeyOwnershipProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Null>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.submitReportEquivocationUnsignedExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_submit_report_equivocation_unsigned_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits an unsigned extrinsic to report an equivocation.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"kusamafinalityapi"},"KusamaFinalityApi"),(0,r.kt)("h3",{id:"bestfinalized-blocknumber-hash"},"bestFinalized(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(BlockNumber, Hash)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.kusamaFinalityApi.bestFinalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"KusamaFinalityApi_best_finalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns number and hash of the best finalized header known to the bridge module.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("h3",{id:"metadata-opaquemetadata"},"metadata(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueMetadata")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Metadata_metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the metadata of a runtime")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"mmrapi"},"MmrApi"),(0,r.kt)("h3",{id:"generatebatchproofleafindices-vecmmrleafindex-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror"},"generateBatchProof(leafIndices: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<MmrLeafIndex>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.generateBatchProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_generate_batch_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate MMR proof for a series of leaves under given indices.")),(0,r.kt)("h3",{id:"generateproofleafindex-mmrleafindex-resultmmrencodableopaqueleaf-mmrproof-mmrerror"},"generateProof(leafIndex: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrLeafIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.generateProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_generate_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate MMR proof for a leaf under given index.")),(0,r.kt)("h3",{id:"mmrroot-resulthash-mmrerror"},"mmrRoot(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<Hash, MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.mmrRoot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_mmr_root")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the on-chain MMR root hash.")),(0,r.kt)("h3",{id:"verifybatchproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror"},"verifyBatchProof(leaves: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<MmrEncodableOpaqueLeaf>"),", proof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrBatchProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.verifyBatchProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_verify_batch_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Verify MMR proof against on-chain MMR for a batch of leaves.")),(0,r.kt)("h3",{id:"verifybatchproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror"},"verifyBatchProofStateless(root: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", leaves: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<MmrEncodableOpaqueLeaf>"),", proof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrBatchProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.verifyBatchProofStateless")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_verify_batch_proof_stateless")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Verify MMR proof against given root hash or a batch of leaves.")),(0,r.kt)("h3",{id:"verifyproofleaf-mmrencodableopaqueleaf-proof-mmrproof-result-mmrerror"},"verifyProof(leaf: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrEncodableOpaqueLeaf"),", proof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.verifyProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_verify_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Verify MMR proof against on-chain MMR.")),(0,r.kt)("h3",{id:"verifyproofstatelessroot-hash-leaf-mmrencodableopaqueleaf-proof-mmrproof-result-mmrerror"},"verifyProofStateless(root: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", leaf: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrEncodableOpaqueLeaf"),", proof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.verifyProofStateless")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_verify_proof_stateless")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Verify MMR proof against given root hash.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"nimbusapi"},"NimbusApi"),(0,r.kt)("h3",{id:"canauthorauthor-accountid-relayparent-u32-parentheader-header-bool-1"},"canAuthor(author: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),", relayParent: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),", parentHeader: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.nimbusApi.canAuthor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NimbusApi_can_author")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The runtime api used to predict whether a Nimbus author will be eligible in the given slot")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"nominationpoolsapi"},"NominationPoolsApi"),(0,r.kt)("h3",{id:"pendingrewardsmember-accountid-balance"},"pendingRewards(member: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.nominationPoolsApi.pendingRewards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NominationPoolsApi_pending_rewards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the pending rewards for the given member.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"offchainworkerapi"},"OffchainWorkerApi"),(0,r.kt)("h3",{id:"offchainworkerheader-header-null"},"offchainWorker(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.offchainWorkerApi.offchainWorker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"OffchainWorkerApi_offchain_worker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Starts the off-chain task for given block header.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"oracleapi"},"OracleApi"),(0,r.kt)("h3",{id:"getallvaluesproviderid-raw-raw"},"getAllValues(providerId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Raw"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Raw")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.oracleApi.getAllValues")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"OracleApi_get_all_values")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves all values")),(0,r.kt)("h3",{id:"getvalueproviderid-raw-key-raw-optionraw"},"getValue(providerId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Raw"),", key: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Raw"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Raw>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.oracleApi.getValue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"OracleApi_get_value")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieves a single value")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"parachainhost"},"ParachainHost"),(0,r.kt)("h3",{id:"assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash"},"assumedValidationData(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<(PersistedValidationData, ValidationCodeHash)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.assumedValidationData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_assumed_validation_data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the persisted validation data for the given ",(0,r.kt)("inlineCode",{parentName:"li"},"ParaId")," along with the corresponding validation code hash.")),(0,r.kt)("h3",{id:"availabilitycores-veccorestate"},"availabilityCores(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<CoreState>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.availabilityCores")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_availability_cores")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Yields information on all availability cores as relevant to the child block.")),(0,r.kt)("h3",{id:"candidateevents-veccandidateevent"},"candidateEvents(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<CandidateEvent>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.candidateEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_candidate_events")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get a vector of events concerning candidates that occurred within a block.")),(0,r.kt)("h3",{id:"candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt"},"candidatePendingAvailability(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<CommittedCandidateReceipt>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.candidatePendingAvailability")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_candidate_pending_availability")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the receipt of a candidate pending availability.")),(0,r.kt)("h3",{id:"checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool"},"checkValidationOutputs(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", outputs: ",(0,r.kt)("inlineCode",{parentName:"h3"},"CandidateCommitments"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.checkValidationOutputs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_check_validation_outputs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Checks if the given validation outputs pass the acceptance criteria.")),(0,r.kt)("h3",{id:"disputes-vecsessionindex-candidatehash-disputestate"},"disputes(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<(SessionIndex, CandidateHash, DisputeState)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.disputes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_disputes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns all onchain disputes.")),(0,r.kt)("h3",{id:"dmqcontentsparaid-paraid-vecinbounddownwardmessage"},"dmqContents(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<InboundDownwardMessage>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.dmqContents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_dmq_contents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get all the pending inbound messages in the downward message queue for a para.")),(0,r.kt)("h3",{id:"inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage"},"inboundHrmpChannelsContents(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<InboundHrmpMessage>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.inboundHrmpChannelsContents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_inbound_hrmp_channels_contents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the contents of all channels addressed to the given recipient.")),(0,r.kt)("h3",{id:"onchainvotes-optionscrapedonchainvotes"},"onChainVotes(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ScrapedOnChainVotes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.onChainVotes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_on_chain_votes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Scrape dispute relevant from on-chain, backing votes and resolved disputes.")),(0,r.kt)("h3",{id:"persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata"},"persistedValidationData(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", assumption: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OccupiedCoreAssumption"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<PersistedValidationData>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.persistedValidationData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_persisted_validation_data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Yields the persisted validation data for the given ",(0,r.kt)("inlineCode",{parentName:"li"},"ParaId")," along with an assumption that should be used if the para currently occupies a core.")),(0,r.kt)("h3",{id:"pvfsrequireprecheck-vecvalidationcodehash"},"pvfsRequirePrecheck(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<ValidationCodeHash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.pvfsRequirePrecheck")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_pvfs_require_precheck")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns code hashes of PVFs that require pre-checking by validators in the active set.")),(0,r.kt)("h3",{id:"sessionindexforchild-sessionindex"},"sessionIndexForChild(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SessionIndex")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.sessionIndexForChild")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_session_index_for_child")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the session index expected at a child of the block.")),(0,r.kt)("h3",{id:"sessioninfoindex-sessionindex-optionsessioninfo"},"sessionInfo(index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SessionIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<SessionInfo>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.sessionInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_session_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the session info for the given session, if stored.")),(0,r.kt)("h3",{id:"submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null"},"submitPvfCheckStatement(stmt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PvfCheckStatement"),", signature: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidatorSignature"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.submitPvfCheckStatement")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_submit_pvf_check_statement")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits a PVF pre-checking statement into the transaction pool.")),(0,r.kt)("h3",{id:"validationcodeparaid-paraid-assumption-occupiedcoreassumption-validationcode"},"validationCode(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", assumption: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OccupiedCoreAssumption"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidationCode")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validationCode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validation_code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Fetch the validation code used by a para, making the given ",(0,r.kt)("inlineCode",{parentName:"li"},"OccupiedCoreAssumption"),".")),(0,r.kt)("h3",{id:"validationcodebyhashhash-validationcodehash-optionvalidationcode"},"validationCodeByHash(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidationCodeHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidationCode>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validationCodeByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validation_code_by_hash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the validation code from its hash.")),(0,r.kt)("h3",{id:"validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash"},"validationCodeHash(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", assumption: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OccupiedCoreAssumption"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidationCodeHash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validationCodeHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validation_code_hash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Fetch the hash of the validation code used by a para, making the given ",(0,r.kt)("inlineCode",{parentName:"li"},"OccupiedCoreAssumption"),".")),(0,r.kt)("h3",{id:"validatorgroups-vecvecparavalidatorindex-grouprotationinfo"},"validatorGroups(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validatorGroups")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validator_groups")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on")),(0,r.kt)("h3",{id:"validators-vecvalidatorid"},"validators(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<ValidatorId>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the current validators.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"polkadotfinalityapi"},"PolkadotFinalityApi"),(0,r.kt)("h3",{id:"bestfinalized-blocknumber-hash-1"},"bestFinalized(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(BlockNumber, Hash)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.polkadotFinalityApi.bestFinalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"PolkadotFinalityApi_best_finalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns number and hash of the best finalized header known to the bridge module.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"rococofinalityapi"},"RococoFinalityApi"),(0,r.kt)("h3",{id:"bestfinalized-blocknumber-hash-2"},"bestFinalized(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(BlockNumber, Hash)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.rococoFinalityApi.bestFinalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"RococoFinalityApi_best_finalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns number and hash of the best finalized header known to the bridge module.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"sessionkeys"},"SessionKeys"),(0,r.kt)("h3",{id:"decodesessionkeysencoded-bytes-optionvecbytes-keytypeid"},"decodeSessionKeys(encoded: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<(Bytes, KeyTypeId)>>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.sessionKeys.decodeSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"SessionKeys_decode_session_keys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Decode the given public session keys.")),(0,r.kt)("h3",{id:"generatesessionkeysseed-optionbytes-bytes"},"generateSessionKeys(seed: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.sessionKeys.generateSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"SessionKeys_generate_session_keys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate a set of session keys with optionally using the given seed.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"taggedtransactionqueue"},"TaggedTransactionQueue"),(0,r.kt)("h3",{id:"validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity"},"validateTransaction(source: ",(0,r.kt)("inlineCode",{parentName:"h3"},"TransactionSource"),", tx: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),", blockHash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"TransactionValidity")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.taggedTransactionQueue.validateTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TaggedTransactionQueue_validate_transaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Validate the transaction.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"timestampapi"},"TimestampApi"),(0,r.kt)("h3",{id:"timestamp-moment"},"timestamp(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Moment")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.timestampApi.timestamp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TimestampApi_timestamp")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": API necessary for timestamp-based difficulty adjustment algorithms.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"tokensapi"},"TokensApi"),(0,r.kt)("h3",{id:"queryexistentialdepositcurrencyid-raw-u128"},"queryExistentialDeposit(currencyId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Raw"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u128")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.tokensApi.queryExistentialDeposit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TokensApi_query_existential_deposit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the existential amount for a specific currency")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"transactionpaymentapi"},"TransactionPaymentApi"),(0,r.kt)("h3",{id:"queryfeedetailsuxt-extrinsic-len-u32-feedetails"},"queryFeeDetails(uxt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"FeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentApi_query_fee_details")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The transaction fee details")),(0,r.kt)("h3",{id:"queryinfouxt-extrinsic-len-u32-runtimedispatchinfo"},"queryInfo(uxt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentApi_query_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The transaction info")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"transactionpaymentcallapi"},"TransactionPaymentCallApi"),(0,r.kt)("h3",{id:"querycallfeedetailscall-call-len-u32-feedetails"},"queryCallFeeDetails(call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Call"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"FeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryCallFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentCallApi_query_call_fee_details")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The call fee details")),(0,r.kt)("h3",{id:"querycallinfocall-call-len-u32-runtimedispatchinfo"},"queryCallInfo(call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Call"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryCallInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentCallApi_query_call_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The call info")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"westendfinalityapi"},"WestendFinalityApi"),(0,r.kt)("h3",{id:"bestfinalized-blocknumber-hash-3"},"bestFinalized(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(BlockNumber, Hash)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.westendFinalityApi.bestFinalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"WestendFinalityApi_best_finalized")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns number and hash of the best finalized header known to the bridge module.")))}u.isMDXComponent=!0}}]);