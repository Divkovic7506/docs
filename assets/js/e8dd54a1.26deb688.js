"use strict";(self.webpackChunkpolkadot_js=self.webpackChunkpolkadot_js||[]).push([[9869],{4137:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return k}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(a),c=i,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||r;return a?n.createElement(k,o(o({ref:t},d),{},{components:a})):n.createElement(k,o({ref:t},d))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8896:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return p},default:function(){return k},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var n=a(7462),i=a(3366),r=(a(7294),a(4137)),o=["components"],l={title:"Runtime"},p=void 0,s={unversionedId:"polkadot/runtime",id:"polkadot/runtime",title:"Runtime",description:"The following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations.",source:"@site/docs/polkadot/runtime.md",sourceDirName:"polkadot",slug:"/polkadot/runtime",permalink:"/docs/polkadot/runtime",draft:!1,editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/polkadot/runtime.md",tags:[],version:"current",frontMatter:{title:"Runtime"},sidebar:"reference",previous:{title:"Overview",permalink:"/docs/polkadot"},next:{title:"JSON-RPC",permalink:"/docs/polkadot/rpc"}},d={},u=[{value:"AccountNonceApi",id:"accountnonceapi",level:2},{value:"accountNonce(accountId: <code>AccountId</code>): <code>Index</code>",id:"accountnonceaccountid-accountid-index",level:3},{value:"AuthorityDiscoveryApi",id:"authoritydiscoveryapi",level:2},{value:"authorities(): <code>Vec&lt;AuthorityId&gt;</code>",id:"authorities-vecauthorityid",level:3},{value:"BabeApi",id:"babeapi",level:2},{value:"configuration(): <code>BabeGenesisConfiguration</code>",id:"configuration-babegenesisconfiguration",level:3},{value:"currentEpoch(): <code>Epoch</code>",id:"currentepoch-epoch",level:3},{value:"currentEpochStart(): <code>Slot</code>",id:"currentepochstart-slot",level:3},{value:"generateKeyOwnershipProof(slot: <code>Slot</code>, authorityId: <code>AuthorityId</code>): <code>Option&lt;OpaqueKeyOwnershipProof&gt;</code>",id:"generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof",level:3},{value:"nextEpoch(): <code>Epoch</code>",id:"nextepoch-epoch",level:3},{value:"submitReportEquivocationUnsignedExtrinsic(equivocationProof: <code>BabeEquivocationProof</code>, keyOwnerProof: <code>OpaqueKeyOwnershipProof</code>): <code>Option&lt;Null&gt;</code>",id:"submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull",level:3},{value:"BeefyApi",id:"beefyapi",level:2},{value:"beefyGenesis(): <code>Option&lt;BlockNumber&gt;</code>",id:"beefygenesis-optionblocknumber",level:3},{value:"generateKeyOwnershipProof(setId: <code>ValidatorSetId</code>, authorityId: <code>AuthorityId</code>): <code>Option&lt;OpaqueKeyOwnershipProof&gt;</code>",id:"generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof",level:3},{value:"submitReportEquivocationUnsignedExtrinsic(equivocationProof: <code>BeefyEquivocationProof</code>, keyOwnerProof: <code>OpaqueKeyOwnershipProof</code>): <code>Option&lt;Null&gt;</code>",id:"submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull",level:3},{value:"validatorSet(): <code>Option&lt;ValidatorSet&gt;</code>",id:"validatorset-optionvalidatorset",level:3},{value:"BeefyMmrApi",id:"beefymmrapi",level:2},{value:"authoritySetProof(): <code>BeefyAuthoritySet</code>",id:"authoritysetproof-beefyauthorityset",level:3},{value:"nextAuthoritySetProof(): <code>BeefyNextAuthoritySet</code>",id:"nextauthoritysetproof-beefynextauthorityset",level:3},{value:"BlockBuilder",id:"blockbuilder",level:2},{value:"applyExtrinsic(extrinsic: <code>Extrinsic</code>): <code>ApplyExtrinsicResult</code>",id:"applyextrinsicextrinsic-extrinsic-applyextrinsicresult",level:3},{value:"checkInherents(block: <code>Block</code>, data: <code>InherentData</code>): <code>CheckInherentsResult</code>",id:"checkinherentsblock-block-data-inherentdata-checkinherentsresult",level:3},{value:"finalizeBlock(): <code>Header</code>",id:"finalizeblock-header",level:3},{value:"inherentExtrinsics(inherent: <code>InherentData</code>): <code>Vec&lt;Extrinsic&gt;</code>",id:"inherentextrinsicsinherent-inherentdata-vecextrinsic",level:3},{value:"Core",id:"core",level:2},{value:"executeBlock(block: <code>Block</code>): <code>Null</code>",id:"executeblockblock-block-null",level:3},{value:"initializeBlock(header: <code>Header</code>): <code>Null</code>",id:"initializeblockheader-header-null",level:3},{value:"version(): <code>RuntimeVersion</code>",id:"version-runtimeversion",level:3},{value:"GenesisBuilder",id:"genesisbuilder",level:2},{value:"buildConfig(json: <code>Vec&lt;u8&gt;</code>): <code>Result&lt;(), GenesisBuildErr&gt;</code>",id:"buildconfigjson-vecu8-result-genesisbuilderr",level:3},{value:"createDefaultConfig(): <code>Vec&lt;u8&gt;</code>",id:"createdefaultconfig-vecu8",level:3},{value:"GrandpaApi",id:"grandpaapi",level:2},{value:"currentSetId(): <code>SetId</code>",id:"currentsetid-setid",level:3},{value:"generateKeyOwnershipProof(setId: <code>SetId</code>, authorityId: <code>AuthorityId</code>): <code>Option&lt;OpaqueKeyOwnershipProof&gt;</code>",id:"generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof",level:3},{value:"grandpaAuthorities(): <code>AuthorityList</code>",id:"grandpaauthorities-authoritylist",level:3},{value:"submitReportEquivocationUnsignedExtrinsic(equivocationProof: <code>GrandpaEquivocationProof</code>, keyOwnerProof: <code>OpaqueKeyOwnershipProof</code>): <code>Option&lt;Null&gt;</code>",id:"submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull",level:3},{value:"Metadata",id:"metadata",level:2},{value:"metadata(): <code>OpaqueMetadata</code>",id:"metadata-opaquemetadata",level:3},{value:"metadataAtVersion(version: <code>u32</code>): <code>Option&lt;OpaqueMetadata&gt;</code>",id:"metadataatversionversion-u32-optionopaquemetadata",level:3},{value:"metadataVersions(): <code>Vec&lt;u32&gt;</code>",id:"metadataversions-vecu32",level:3},{value:"MmrApi",id:"mmrapi",level:2},{value:"generateProof(blockNumbers: <code>Vec&lt;BlockNumber&gt;</code>, bestKnownBlockNumber: <code>Option&lt;BlockNumber&gt;</code>): <code>Result&lt;(Vec&lt;MmrEncodableOpaqueLeaf&gt;, MmrBatchProof), MmrError&gt;</code>",id:"generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror",level:3},{value:"mmrLeafCount(): <code>Result&lt;U64, MmrError&gt;</code>",id:"mmrleafcount-resultu64-mmrerror",level:3},{value:"mmrRoot(): <code>Result&lt;Hash, MmrError&gt;</code>",id:"mmrroot-resulthash-mmrerror",level:3},{value:"verifyProof(leaves: <code>Vec&lt;MmrEncodableOpaqueLeaf&gt;</code>, proof: <code>MmrBatchProof</code>): <code>Result&lt;(), MmrError&gt;</code>",id:"verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror",level:3},{value:"verifyProofStateless(root: <code>Hash</code>, leaves: <code>Vec&lt;MmrEncodableOpaqueLeaf&gt;</code>, proof: <code>MmrBatchProof</code>): <code>Result&lt;(), MmrError&gt;</code>",id:"verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror",level:3},{value:"NominationPoolsApi",id:"nominationpoolsapi",level:2},{value:"balanceToPoints(poolId: <code>NpPoolId</code>, newFunds: <code>Balance</code>): <code>Balance</code>",id:"balancetopointspoolid-nppoolid-newfunds-balance-balance",level:3},{value:"pendingRewards(member: <code>AccountId</code>): <code>Balance</code>",id:"pendingrewardsmember-accountid-balance",level:3},{value:"pointsToBalance(poolId: <code>NpPoolId</code>, points: <code>Balance</code>): <code>Balance</code>",id:"pointstobalancepoolid-nppoolid-points-balance-balance",level:3},{value:"OffchainWorkerApi",id:"offchainworkerapi",level:2},{value:"offchainWorker(header: <code>Header</code>): <code>Null</code>",id:"offchainworkerheader-header-null",level:3},{value:"ParachainHost",id:"parachainhost",level:2},{value:"approvalVotingParams(): <code>ApprovalVotingParams</code>",id:"approvalvotingparams-approvalvotingparams",level:3},{value:"assumedValidationData(paraId: <code>ParaId</code>, hash: <code>Hash</code>): <code>Option&lt;(PersistedValidationData, ValidationCodeHash)&gt;</code>",id:"assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash",level:3},{value:"asyncBackingParams(): <code>AsyncBackingParams</code>",id:"asyncbackingparams-asyncbackingparams",level:3},{value:"availabilityCores(): <code>Vec&lt;CoreState&gt;</code>",id:"availabilitycores-veccorestate",level:3},{value:"candidateEvents(): <code>Vec&lt;CandidateEvent&gt;</code>",id:"candidateevents-veccandidateevent",level:3},{value:"candidatePendingAvailability(paraId: <code>ParaId</code>): <code>Option&lt;CommittedCandidateReceipt&gt;</code>",id:"candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt",level:3},{value:"checkValidationOutputs(paraId: <code>ParaId</code>, outputs: <code>CandidateCommitments</code>): <code>bool</code>",id:"checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool",level:3},{value:"disabledValidators(): <code>ValidatorIndex</code>",id:"disabledvalidators-validatorindex",level:3},{value:"disputes(): <code>Vec&lt;(SessionIndex, CandidateHash, DisputeState)&gt;</code>",id:"disputes-vecsessionindex-candidatehash-disputestate",level:3},{value:"dmqContents(paraId: <code>ParaId</code>): <code>Vec&lt;InboundDownwardMessage&gt;</code>",id:"dmqcontentsparaid-paraid-vecinbounddownwardmessage",level:3},{value:"inboundHrmpChannelsContents(paraId: <code>ParaId</code>): <code>Vec&lt;InboundHrmpMessage&gt;</code>",id:"inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage",level:3},{value:"keyOwnershipProof(validatorId: <code>ValidatorId</code>): <code>Option&lt;OpaqueKeyOwnershipProof&gt;</code>",id:"keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof",level:3},{value:"minimumBackingVotes(): <code>u32</code>",id:"minimumbackingvotes-u32",level:3},{value:"nodeFeatures(): <code>NodeFeatures</code>",id:"nodefeatures-nodefeatures",level:3},{value:"onChainVotes(): <code>Option&lt;ScrapedOnChainVotes&gt;</code>",id:"onchainvotes-optionscrapedonchainvotes",level:3},{value:"paraBackingState(paraId: <code>ParaId</code>): <code>Option&lt;BackingState&gt;</code>",id:"parabackingstateparaid-paraid-optionbackingstate",level:3},{value:"persistedValidationData(paraId: <code>ParaId</code>, assumption: <code>OccupiedCoreAssumption</code>): <code>Option&lt;PersistedValidationData&gt;</code>",id:"persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata",level:3},{value:"pvfsRequirePrecheck(): <code>Vec&lt;ValidationCodeHash&gt;</code>",id:"pvfsrequireprecheck-vecvalidationcodehash",level:3},{value:"sessionExecutorParams(sessionIndex: <code>SessionIndex</code>): <code>Option&lt;ExecutorParams&gt;</code>",id:"sessionexecutorparamssessionindex-sessionindex-optionexecutorparams",level:3},{value:"sessionIndexForChild(): <code>SessionIndex</code>",id:"sessionindexforchild-sessionindex",level:3},{value:"sessionInfo(index: <code>SessionIndex</code>): <code>Option&lt;SessionInfo&gt;</code>",id:"sessioninfoindex-sessionindex-optionsessioninfo",level:3},{value:"submitPvfCheckStatement(stmt: <code>PvfCheckStatement</code>, signature: <code>ValidatorSignature</code>): <code>Null</code>",id:"submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null",level:3},{value:"submitReportDisputeLost(disputeProof: <code>DisputeProof</code>, keyOwnershipProof: <code>OpaqueKeyOwnershipProof</code>): <code>Option&lt;Null&gt;</code>",id:"submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull",level:3},{value:"unappliedSlashes(): <code>Vec&lt;(SessionIndex, CandidateHash, PendingSlashes)&gt;</code>",id:"unappliedslashes-vecsessionindex-candidatehash-pendingslashes",level:3},{value:"validationCode(paraId: <code>ParaId</code>, assumption: <code>OccupiedCoreAssumption</code>): <code>Option&lt;ValidationCode&gt;</code>",id:"validationcodeparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcode",level:3},{value:"validationCodeByHash(hash: <code>ValidationCodeHash</code>): <code>Option&lt;ValidationCode&gt;</code>",id:"validationcodebyhashhash-validationcodehash-optionvalidationcode",level:3},{value:"validationCodeHash(paraId: <code>ParaId</code>, assumption: <code>OccupiedCoreAssumption</code>): <code>Option&lt;ValidationCodeHash&gt;</code>",id:"validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash",level:3},{value:"validatorGroups(): <code>(Vec&lt;Vec&lt;ParaValidatorIndex&gt;&gt;, GroupRotationInfo)</code>",id:"validatorgroups-vecvecparavalidatorindex-grouprotationinfo",level:3},{value:"validators(): <code>Vec&lt;ValidatorId&gt;</code>",id:"validators-vecvalidatorid",level:3},{value:"SessionKeys",id:"sessionkeys",level:2},{value:"decodeSessionKeys(encoded: <code>Bytes</code>): <code>Option&lt;Vec&lt;(Bytes, KeyTypeId)&gt;&gt;</code>",id:"decodesessionkeysencoded-bytes-optionvecbytes-keytypeid",level:3},{value:"generateSessionKeys(seed: <code>Option&lt;Bytes&gt;</code>): <code>Bytes</code>",id:"generatesessionkeysseed-optionbytes-bytes",level:3},{value:"StakingApi",id:"stakingapi",level:2},{value:"nominationsQuota(balance: <code>Balance</code>): <code>u32</code>",id:"nominationsquotabalance-balance-u32",level:3},{value:"TaggedTransactionQueue",id:"taggedtransactionqueue",level:2},{value:"validateTransaction(source: <code>TransactionSource</code>, tx: <code>Extrinsic</code>, blockHash: <code>BlockHash</code>): <code>TransactionValidity</code>",id:"validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity",level:3},{value:"TransactionPaymentApi",id:"transactionpaymentapi",level:2},{value:"queryFeeDetails(uxt: <code>Extrinsic</code>, len: <code>u32</code>): <code>FeeDetails</code>",id:"queryfeedetailsuxt-extrinsic-len-u32-feedetails",level:3},{value:"queryInfo(uxt: <code>Extrinsic</code>, len: <code>u32</code>): <code>RuntimeDispatchInfo</code>",id:"queryinfouxt-extrinsic-len-u32-runtimedispatchinfo",level:3},{value:"queryLengthToFee(length: <code>u32</code>): <code>Balance</code>",id:"querylengthtofeelength-u32-balance",level:3},{value:"queryWeightToFee(weight: <code>Weight</code>): <code>Balance</code>",id:"queryweighttofeeweight-weight-balance",level:3},{value:"TransactionPaymentCallApi",id:"transactionpaymentcallapi",level:2},{value:"queryCallFeeDetails(call: <code>Call</code>, len: <code>u32</code>): <code>FeeDetails</code>",id:"querycallfeedetailscall-call-len-u32-feedetails",level:3},{value:"queryCallInfo(call: <code>Call</code>, len: <code>u32</code>): <code>RuntimeDispatchInfo</code>",id:"querycallinfocall-call-len-u32-runtimedispatchinfo",level:3},{value:"queryLengthToFee(length: <code>u32</code>): <code>Balance</code>",id:"querylengthtofeelength-u32-balance-1",level:3},{value:"queryWeightToFee(weight: <code>Weight</code>): <code>Balance</code>",id:"queryweighttofeeweight-weight-balance-1",level:3}],m={toc:u},c="wrapper";function k(e){var t=e.components,a=(0,i.Z)(e,o);return(0,r.kt)(c,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The following section contains known runtime calls that may be available on specific runtimes (depending on configuration and available pallets). These call directly into the WASM runtime for queries and operations."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#accountnonceapi"},"accountNonceApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#authoritydiscoveryapi"},"authorityDiscoveryApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#babeapi"},"babeApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#beefyapi"},"beefyApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#beefymmrapi"},"beefyMmrApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#blockbuilder"},"blockBuilder")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#core"},"core")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#genesisbuilder"},"genesisBuilder")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#grandpaapi"},"grandpaApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#metadata"},"metadata")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#mmrapi"},"mmrApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#nominationpoolsapi"},"nominationPoolsApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#offchainworkerapi"},"offchainWorkerApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#parachainhost"},"parachainHost")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#sessionkeys"},"sessionKeys")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#stakingapi"},"stakingApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#taggedtransactionqueue"},"taggedTransactionQueue")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#transactionpaymentapi"},"transactionPaymentApi")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"#transactionpaymentcallapi"},"transactionPaymentCallApi"))))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"accountnonceapi"},"AccountNonceApi"),(0,r.kt)("h3",{id:"accountnonceaccountid-accountid-index"},"accountNonce(accountId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Index")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.accountNonceApi.accountNonce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AccountNonceApi_account_nonce")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The API to query account nonce (aka transaction index)")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"authoritydiscoveryapi"},"AuthorityDiscoveryApi"),(0,r.kt)("h3",{id:"authorities-vecauthorityid"},"authorities(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<AuthorityId>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.authorityDiscoveryApi.authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"AuthorityDiscoveryApi_authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Retrieve authority identifiers of the current and next authority set.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"babeapi"},"BabeApi"),(0,r.kt)("h3",{id:"configuration-babegenesisconfiguration"},"configuration(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BabeGenesisConfiguration")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_configuration")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the genesis configuration for BABE. The configuration is only read on genesis.")),(0,r.kt)("h3",{id:"currentepoch-epoch"},"currentEpoch(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Epoch")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.currentEpoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_current_epoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns information regarding the current epoch.")),(0,r.kt)("h3",{id:"currentepochstart-slot"},"currentEpochStart(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Slot")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.currentEpochStart")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_current_epoch_start")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the slot that started the current epoch.")),(0,r.kt)("h3",{id:"generatekeyownershipproofslot-slot-authorityid-authorityid-optionopaquekeyownershipproof"},"generateKeyOwnershipProof(slot: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Slot"),", authorityId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueKeyOwnershipProof>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.generateKeyOwnershipProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_generate_key_ownership_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generates a proof of key ownership for the given authority in the current epoch.")),(0,r.kt)("h3",{id:"nextepoch-epoch"},"nextEpoch(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Epoch")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.nextEpoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_next_epoch")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns information regarding the next epoch (which was already previously announced).")),(0,r.kt)("h3",{id:"submitreportequivocationunsignedextrinsicequivocationproof-babeequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull"},"submitReportEquivocationUnsignedExtrinsic(equivocationProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BabeEquivocationProof"),", keyOwnerProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueKeyOwnershipProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Null>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.babeApi.submitReportEquivocationUnsignedExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BabeApi_submit_report_equivocation_unsigned_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits an unsigned extrinsic to report an equivocation.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"beefyapi"},"BeefyApi"),(0,r.kt)("h3",{id:"beefygenesis-optionblocknumber"},"beefyGenesis(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<BlockNumber>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyApi.beefyGenesis")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyApi_beefy_genesis")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the block number where BEEFY consensus is enabled/started")),(0,r.kt)("h3",{id:"generatekeyownershipproofsetid-validatorsetid-authorityid-authorityid-optionopaquekeyownershipproof"},"generateKeyOwnershipProof(setId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidatorSetId"),", authorityId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueKeyOwnershipProof>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyApi.generateKeyOwnershipProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyApi_generate_key_ownership_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generates a proof of key ownership for the given authority in the given set.")),(0,r.kt)("h3",{id:"submitreportequivocationunsignedextrinsicequivocationproof-beefyequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull"},"submitReportEquivocationUnsignedExtrinsic(equivocationProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BeefyEquivocationProof"),", keyOwnerProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueKeyOwnershipProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Null>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyApi.submitReportEquivocationUnsignedExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyApi_submit_report_equivocation_unsigned_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits an unsigned extrinsic to report an equivocation.")),(0,r.kt)("h3",{id:"validatorset-optionvalidatorset"},"validatorSet(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidatorSet>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyApi.validatorSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyApi_validator_set")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the current active BEEFY validator set")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"beefymmrapi"},"BeefyMmrApi"),(0,r.kt)("h3",{id:"authoritysetproof-beefyauthorityset"},"authoritySetProof(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BeefyAuthoritySet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyMmrApi.authoritySetProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyMmrApi_authority_set_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the currently active BEEFY authority set proof.")),(0,r.kt)("h3",{id:"nextauthoritysetproof-beefynextauthorityset"},"nextAuthoritySetProof(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"BeefyNextAuthoritySet")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.beefyMmrApi.nextAuthoritySetProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BeefyMmrApi_next_authority_set_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the next/queued BEEFY authority set proof.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"blockbuilder"},"BlockBuilder"),(0,r.kt)("h3",{id:"applyextrinsicextrinsic-extrinsic-applyextrinsicresult"},"applyExtrinsic(extrinsic: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ApplyExtrinsicResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.applyExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_apply_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Apply the given extrinsic.")),(0,r.kt)("h3",{id:"checkinherentsblock-block-data-inherentdata-checkinherentsresult"},"checkInherents(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Block"),", data: ",(0,r.kt)("inlineCode",{parentName:"h3"},"InherentData"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"CheckInherentsResult")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.checkInherents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_check_inherents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Check that the inherents are valid.")),(0,r.kt)("h3",{id:"finalizeblock-header"},"finalizeBlock(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.finalizeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_finalize_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Finish the current block.")),(0,r.kt)("h3",{id:"inherentextrinsicsinherent-inherentdata-vecextrinsic"},"inherentExtrinsics(inherent: ",(0,r.kt)("inlineCode",{parentName:"h3"},"InherentData"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<Extrinsic>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.blockBuilder.inherentExtrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"BlockBuilder_inherent_extrinsics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate inherent extrinsics.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"core"},"Core"),(0,r.kt)("h3",{id:"executeblockblock-block-null"},"executeBlock(block: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Block"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.executeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Core_execute_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Execute the given block.")),(0,r.kt)("h3",{id:"initializeblockheader-header-null"},"initializeBlock(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.initializeBlock")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Core_initialize_block")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Initialize a block with the given header.")),(0,r.kt)("h3",{id:"version-runtimeversion"},"version(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeVersion")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.core.version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Core_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the version of the runtime.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"genesisbuilder"},"GenesisBuilder"),(0,r.kt)("h3",{id:"buildconfigjson-vecu8-result-genesisbuilderr"},"buildConfig(json: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u8>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), GenesisBuildErr>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.genesisBuilder.buildConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GenesisBuilder_build_config")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Build ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," from a JSON blob not using any defaults and store it in the storage.")),(0,r.kt)("h3",{id:"createdefaultconfig-vecu8"},"createDefaultConfig(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u8>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.genesisBuilder.createDefaultConfig")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GenesisBuilder_create_default_config")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Creates the default ",(0,r.kt)("inlineCode",{parentName:"li"},"RuntimeGenesisConfig")," and returns it as a JSON blob.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"grandpaapi"},"GrandpaApi"),(0,r.kt)("h3",{id:"currentsetid-setid"},"currentSetId(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SetId")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.currentSetId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_current_set_id")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get current GRANDPA authority set id.")),(0,r.kt)("h3",{id:"generatekeyownershipproofsetid-setid-authorityid-authorityid-optionopaquekeyownershipproof"},"generateKeyOwnershipProof(setId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SetId"),", authorityId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueKeyOwnershipProof>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.generateKeyOwnershipProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_generate_key_ownership_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generates a proof of key ownership for the given authority in the given set.")),(0,r.kt)("h3",{id:"grandpaauthorities-authoritylist"},"grandpaAuthorities(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"AuthorityList")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.grandpaAuthorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_grandpa_authorities")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.")),(0,r.kt)("h3",{id:"submitreportequivocationunsignedextrinsicequivocationproof-grandpaequivocationproof-keyownerproof-opaquekeyownershipproof-optionnull"},"submitReportEquivocationUnsignedExtrinsic(equivocationProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"GrandpaEquivocationProof"),", keyOwnerProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueKeyOwnershipProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Null>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.grandpaApi.submitReportEquivocationUnsignedExtrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"GrandpaApi_submit_report_equivocation_unsigned_extrinsic")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits an unsigned extrinsic to report an equivocation.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"metadata"},"Metadata"),(0,r.kt)("h3",{id:"metadata-opaquemetadata"},"metadata(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueMetadata")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Metadata_metadata")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the metadata of a runtime")),(0,r.kt)("h3",{id:"metadataatversionversion-u32-optionopaquemetadata"},"metadataAtVersion(version: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueMetadata>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadataAtVersion")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Metadata_metadata_at_version")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the metadata at a given version.")),(0,r.kt)("h3",{id:"metadataversions-vecu32"},"metadataVersions(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<u32>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.metadata.metadataVersions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Metadata_metadata_versions")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the supported metadata versions.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"mmrapi"},"MmrApi"),(0,r.kt)("h3",{id:"generateproofblocknumbers-vecblocknumber-bestknownblocknumber-optionblocknumber-resultvecmmrencodableopaqueleaf-mmrbatchproof-mmrerror"},"generateProof(blockNumbers: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<BlockNumber>"),", bestKnownBlockNumber: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<BlockNumber>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.generateProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_generate_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate MMR proof for the given block numbers.")),(0,r.kt)("h3",{id:"mmrleafcount-resultu64-mmrerror"},"mmrLeafCount(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<U64, MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.mmrLeafCount")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_mmr_leaf_count")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the number of MMR blocks in the chain.")),(0,r.kt)("h3",{id:"mmrroot-resulthash-mmrerror"},"mmrRoot(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<Hash, MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.mmrRoot")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_mmr_root")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Return the on-chain MMR root hash.")),(0,r.kt)("h3",{id:"verifyproofleaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror"},"verifyProof(leaves: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<MmrEncodableOpaqueLeaf>"),", proof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrBatchProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.verifyProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_verify_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Verify MMR proof against on-chain MMR.")),(0,r.kt)("h3",{id:"verifyproofstatelessroot-hash-leaves-vecmmrencodableopaqueleaf-proof-mmrbatchproof-result-mmrerror"},"verifyProofStateless(root: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),", leaves: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<MmrEncodableOpaqueLeaf>"),", proof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"MmrBatchProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Result<(), MmrError>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.mmrApi.verifyProofStateless")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"MmrApi_verify_proof_stateless")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Verify MMR proof against given root hash.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"nominationpoolsapi"},"NominationPoolsApi"),(0,r.kt)("h3",{id:"balancetopointspoolid-nppoolid-newfunds-balance-balance"},"balanceToPoints(poolId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"NpPoolId"),", newFunds: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.nominationPoolsApi.balanceToPoints")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NominationPoolsApi_balance_to_points")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the equivalent points of ",(0,r.kt)("inlineCode",{parentName:"li"},"new_funds")," for a given pool.")),(0,r.kt)("h3",{id:"pendingrewardsmember-accountid-balance"},"pendingRewards(member: ",(0,r.kt)("inlineCode",{parentName:"h3"},"AccountId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.nominationPoolsApi.pendingRewards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NominationPoolsApi_pending_rewards")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the pending rewards for the given member.")),(0,r.kt)("h3",{id:"pointstobalancepoolid-nppoolid-points-balance-balance"},"pointsToBalance(poolId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"NpPoolId"),", points: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.nominationPoolsApi.pointsToBalance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"NominationPoolsApi_points_to_balance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the equivalent balance of ",(0,r.kt)("inlineCode",{parentName:"li"},"points")," for a given pool.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"offchainworkerapi"},"OffchainWorkerApi"),(0,r.kt)("h3",{id:"offchainworkerheader-header-null"},"offchainWorker(header: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Header"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.offchainWorkerApi.offchainWorker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"OffchainWorkerApi_offchain_worker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Starts the off-chain task for given block header.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"parachainhost"},"ParachainHost"),(0,r.kt)("h3",{id:"approvalvotingparams-approvalvotingparams"},"approvalVotingParams(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ApprovalVotingParams")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.approvalVotingParams")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_approval_voting_params")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Approval voting configuration parameters")),(0,r.kt)("h3",{id:"assumedvalidationdataparaid-paraid-hash-hash-optionpersistedvalidationdata-validationcodehash"},"assumedValidationData(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Hash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<(PersistedValidationData, ValidationCodeHash)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.assumedValidationData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_assumed_validation_data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the persisted validation data for the given ",(0,r.kt)("inlineCode",{parentName:"li"},"ParaId")," along with the corresponding validation code hash.")),(0,r.kt)("h3",{id:"asyncbackingparams-asyncbackingparams"},"asyncBackingParams(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"AsyncBackingParams")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.asyncBackingParams")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_async_backing_params")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns candidate's acceptance limitations for asynchronous backing for a relay parent")),(0,r.kt)("h3",{id:"availabilitycores-veccorestate"},"availabilityCores(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<CoreState>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.availabilityCores")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_availability_cores")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Yields information on all availability cores as relevant to the child block.")),(0,r.kt)("h3",{id:"candidateevents-veccandidateevent"},"candidateEvents(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<CandidateEvent>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.candidateEvents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_candidate_events")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get a vector of events concerning candidates that occurred within a block.")),(0,r.kt)("h3",{id:"candidatependingavailabilityparaid-paraid-optioncommittedcandidatereceipt"},"candidatePendingAvailability(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<CommittedCandidateReceipt>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.candidatePendingAvailability")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_candidate_pending_availability")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the receipt of a candidate pending availability.")),(0,r.kt)("h3",{id:"checkvalidationoutputsparaid-paraid-outputs-candidatecommitments-bool"},"checkValidationOutputs(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", outputs: ",(0,r.kt)("inlineCode",{parentName:"h3"},"CandidateCommitments"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"bool")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.checkValidationOutputs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_check_validation_outputs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Checks if the given validation outputs pass the acceptance criteria.")),(0,r.kt)("h3",{id:"disabledvalidators-validatorindex"},"disabledValidators(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidatorIndex")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.disabledValidators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_disabled_validators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a list of all disabled validators at the given block")),(0,r.kt)("h3",{id:"disputes-vecsessionindex-candidatehash-disputestate"},"disputes(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<(SessionIndex, CandidateHash, DisputeState)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.disputes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_disputes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns all onchain disputes.")),(0,r.kt)("h3",{id:"dmqcontentsparaid-paraid-vecinbounddownwardmessage"},"dmqContents(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<InboundDownwardMessage>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.dmqContents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_dmq_contents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get all the pending inbound messages in the downward message queue for a para.")),(0,r.kt)("h3",{id:"inboundhrmpchannelscontentsparaid-paraid-vecinboundhrmpmessage"},"inboundHrmpChannelsContents(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<InboundHrmpMessage>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.inboundHrmpChannelsContents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_inbound_hrmp_channels_contents")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the contents of all channels addressed to the given recipient.")),(0,r.kt)("h3",{id:"keyownershipproofvalidatorid-validatorid-optionopaquekeyownershipproof"},"keyOwnershipProof(validatorId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidatorId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<OpaqueKeyOwnershipProof>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.keyOwnershipProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_key_ownership_proof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a merkle proof of a validator session key")),(0,r.kt)("h3",{id:"minimumbackingvotes-u32"},"minimumBackingVotes(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.minimumBackingVotes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_minimum_backing_votes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the minimum number of backing votes for a parachain candidate. This is a staging method! Do not use on production runtimes!")),(0,r.kt)("h3",{id:"nodefeatures-nodefeatures"},"nodeFeatures(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"NodeFeatures")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.nodeFeatures")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_node_features")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get node features. This is a staging method! Do not use on production runtimes!")),(0,r.kt)("h3",{id:"onchainvotes-optionscrapedonchainvotes"},"onChainVotes(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ScrapedOnChainVotes>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.onChainVotes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_on_chain_votes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Scrape dispute relevant from on-chain, backing votes and resolved disputes.")),(0,r.kt)("h3",{id:"parabackingstateparaid-paraid-optionbackingstate"},"paraBackingState(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<BackingState>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.paraBackingState")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_para_backing_state")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the state of parachain backing for a given para")),(0,r.kt)("h3",{id:"persistedvalidationdataparaid-paraid-assumption-occupiedcoreassumption-optionpersistedvalidationdata"},"persistedValidationData(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", assumption: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OccupiedCoreAssumption"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<PersistedValidationData>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.persistedValidationData")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_persisted_validation_data")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Yields the persisted validation data for the given ",(0,r.kt)("inlineCode",{parentName:"li"},"ParaId")," along with an assumption that should be used if the para currently occupies a core.")),(0,r.kt)("h3",{id:"pvfsrequireprecheck-vecvalidationcodehash"},"pvfsRequirePrecheck(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<ValidationCodeHash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.pvfsRequirePrecheck")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_pvfs_require_precheck")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns code hashes of PVFs that require pre-checking by validators in the active set.")),(0,r.kt)("h3",{id:"sessionexecutorparamssessionindex-sessionindex-optionexecutorparams"},"sessionExecutorParams(sessionIndex: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SessionIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ExecutorParams>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.sessionExecutorParams")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_session_executor_params")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns execution parameters for the session.")),(0,r.kt)("h3",{id:"sessionindexforchild-sessionindex"},"sessionIndexForChild(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"SessionIndex")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.sessionIndexForChild")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_session_index_for_child")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the session index expected at a child of the block.")),(0,r.kt)("h3",{id:"sessioninfoindex-sessionindex-optionsessioninfo"},"sessionInfo(index: ",(0,r.kt)("inlineCode",{parentName:"h3"},"SessionIndex"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<SessionInfo>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.sessionInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_session_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the session info for the given session, if stored.")),(0,r.kt)("h3",{id:"submitpvfcheckstatementstmt-pvfcheckstatement-signature-validatorsignature-null"},"submitPvfCheckStatement(stmt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"PvfCheckStatement"),", signature: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidatorSignature"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Null")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.submitPvfCheckStatement")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_submit_pvf_check_statement")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submits a PVF pre-checking statement into the transaction pool.")),(0,r.kt)("h3",{id:"submitreportdisputelostdisputeproof-disputeproof-keyownershipproof-opaquekeyownershipproof-optionnull"},"submitReportDisputeLost(disputeProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"DisputeProof"),", keyOwnershipProof: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OpaqueKeyOwnershipProof"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Null>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.submitReportDisputeLost")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_submit_report_dispute_lost")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Submit an unsigned extrinsic to slash validators who lost a dispute about a candidate of a past session")),(0,r.kt)("h3",{id:"unappliedslashes-vecsessionindex-candidatehash-pendingslashes"},"unappliedSlashes(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<(SessionIndex, CandidateHash, PendingSlashes)>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.unappliedSlashes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_unapplied_slashes")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns a list of validators that lost a past session dispute and need to be slashed")),(0,r.kt)("h3",{id:"validationcodeparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcode"},"validationCode(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", assumption: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OccupiedCoreAssumption"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidationCode>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validationCode")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validation_code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Fetch the validation code used by a para, making the given ",(0,r.kt)("inlineCode",{parentName:"li"},"OccupiedCoreAssumption"),".")),(0,r.kt)("h3",{id:"validationcodebyhashhash-validationcodehash-optionvalidationcode"},"validationCodeByHash(hash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ValidationCodeHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidationCode>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validationCodeByHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validation_code_by_hash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the validation code from its hash.")),(0,r.kt)("h3",{id:"validationcodehashparaid-paraid-assumption-occupiedcoreassumption-optionvalidationcodehash"},"validationCodeHash(paraId: ",(0,r.kt)("inlineCode",{parentName:"h3"},"ParaId"),", assumption: ",(0,r.kt)("inlineCode",{parentName:"h3"},"OccupiedCoreAssumption"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<ValidationCodeHash>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validationCodeHash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validation_code_hash")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Fetch the hash of the validation code used by a para, making the given ",(0,r.kt)("inlineCode",{parentName:"li"},"OccupiedCoreAssumption"),".")),(0,r.kt)("h3",{id:"validatorgroups-vecvecparavalidatorindex-grouprotationinfo"},"validatorGroups(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validatorGroups")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validator_groups")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on")),(0,r.kt)("h3",{id:"validators-vecvalidatorid"},"validators(): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Vec<ValidatorId>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.parachainHost.validators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"ParachainHost_validators")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Get the current validators.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"sessionkeys"},"SessionKeys"),(0,r.kt)("h3",{id:"decodesessionkeysencoded-bytes-optionvecbytes-keytypeid"},"decodeSessionKeys(encoded: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Vec<(Bytes, KeyTypeId)>>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.sessionKeys.decodeSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"SessionKeys_decode_session_keys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Decode the given public session keys.")),(0,r.kt)("h3",{id:"generatesessionkeysseed-optionbytes-bytes"},"generateSessionKeys(seed: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Option<Bytes>"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Bytes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.sessionKeys.generateSessionKeys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"SessionKeys_generate_session_keys")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Generate a set of session keys with optionally using the given seed.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"stakingapi"},"StakingApi"),(0,r.kt)("h3",{id:"nominationsquotabalance-balance-u32"},"nominationsQuota(balance: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.stakingApi.nominationsQuota")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"StakingApi_nominations_quota")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Returns the nominations quota for a nominator with a given balance.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"taggedtransactionqueue"},"TaggedTransactionQueue"),(0,r.kt)("h3",{id:"validatetransactionsource-transactionsource-tx-extrinsic-blockhash-blockhash-transactionvalidity"},"validateTransaction(source: ",(0,r.kt)("inlineCode",{parentName:"h3"},"TransactionSource"),", tx: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),", blockHash: ",(0,r.kt)("inlineCode",{parentName:"h3"},"BlockHash"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"TransactionValidity")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.taggedTransactionQueue.validateTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TaggedTransactionQueue_validate_transaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Validate the transaction.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"transactionpaymentapi"},"TransactionPaymentApi"),(0,r.kt)("h3",{id:"queryfeedetailsuxt-extrinsic-len-u32-feedetails"},"queryFeeDetails(uxt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"FeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentApi_query_fee_details")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The transaction fee details")),(0,r.kt)("h3",{id:"queryinfouxt-extrinsic-len-u32-runtimedispatchinfo"},"queryInfo(uxt: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Extrinsic"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentApi_query_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The transaction info")),(0,r.kt)("h3",{id:"querylengthtofeelength-u32-balance"},"queryLengthToFee(length: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryLengthToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentApi_query_length_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the output of the current LengthToFee given some input")),(0,r.kt)("h3",{id:"queryweighttofeeweight-weight-balance"},"queryWeightToFee(weight: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Weight"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentApi.queryWeightToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentApi_query_weight_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the output of the current WeightToFee given some input")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"transactionpaymentcallapi"},"TransactionPaymentCallApi"),(0,r.kt)("h3",{id:"querycallfeedetailscall-call-len-u32-feedetails"},"queryCallFeeDetails(call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Call"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"FeeDetails")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryCallFeeDetails")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentCallApi_query_call_fee_details")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The call fee details")),(0,r.kt)("h3",{id:"querycallinfocall-call-len-u32-runtimedispatchinfo"},"queryCallInfo(call: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Call"),", len: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"RuntimeDispatchInfo")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryCallInfo")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentCallApi_query_call_info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": The call info")),(0,r.kt)("h3",{id:"querylengthtofeelength-u32-balance-1"},"queryLengthToFee(length: ",(0,r.kt)("inlineCode",{parentName:"h3"},"u32"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryLengthToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentCallApi_query_length_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the output of the current LengthToFee given some input")),(0,r.kt)("h3",{id:"queryweighttofeeweight-weight-balance-1"},"queryWeightToFee(weight: ",(0,r.kt)("inlineCode",{parentName:"h3"},"Weight"),"): ",(0,r.kt)("inlineCode",{parentName:"h3"},"Balance")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"interface"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"api.call.transactionPaymentCallApi.queryWeightToFee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"runtime"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TransactionPaymentCallApi_query_weight_to_fee")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"summary"),": Query the output of the current WeightToFee given some input")))}k.isMDXComponent=!0}}]);